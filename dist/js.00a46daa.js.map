{"version":3,"sources":["node_modules/@gitgraph/js/lib/gitgraph.umd.js","../src/orientation.ts","../src/utils.ts","../src/template.ts","node_modules/color-name/index.js","node_modules/simple-swizzle/node_modules/is-arrayish/index.js","node_modules/simple-swizzle/index.js","node_modules/color-string/index.js","node_modules/color-convert/conversions.js","node_modules/color-convert/route.js","node_modules/color-convert/index.js","node_modules/color/index.js","js/index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Color","require","c","master","develop","feature","release","qa","bugfix","hotfix","graphContainer","document","getElementById","customTemplate","commit","message","displayAuthor","displayHash","colors","hex","gg","template","orientation","author","branch","name","from","featureA","merge","bugfixA","v2_tagged","tag","hotfixA","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","stack","overlay","createErrorOverlay","body","appendChild","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappingst4EA,uEAAuE;AACvE,iEAAiE;AACjE,6EAA6E;AAC7E,8DAA8D;;AAE9D,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,mDAAoC,CAAA;IACpC,wCAAyB,CAAA;IACzB,uDAAwC,CAAA;AAC1C,CAAC,EAJW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAItB;;;;;ACPD,+CAA4C;AAqC5C;;;;GAIG;AACH,SAAS,eAAe,CAAC,KAAU,EAAE,YAAqB;IACxD,OAAO,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC;AAC3D,CAAC;AArCC,0CAAe;AAuCjB;;;;GAIG;AACH,SAAS,cAAc,CAAC,KAAU,EAAE,YAAoB;IACtD,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC;AAC1D,CAAC;AA7CC,wCAAc;AA+ChB;;;;GAIG;AACH,SAAS,IAAI,CAAuB,GAAM,EAAE,KAAU;IACpD,OAAO,kBACF,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,mBAAM,GAAG,IAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,IAAG,EAAE,EAAE,CAAC,CACnD,CAAC;AAClB,CAAC;AAvDC,oBAAI;AAyDN;;;;GAIG;AACH,SAAS,KAAK,CACZ,OAA6B,EAC7B,KAAiC;IAEjC,sCAAsC;IACtC,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CACtE,CAAC;AACJ,CAAC;AArEC,sBAAK;AAuEP;;;;GAIG;AACH,SAAS,WAAW,CAAC,GAAQ;IAC3B,OAAO,GAAG,KAAK,SAAS,CAAC;AAC3B,CAAC;AA7EC,kCAAW;AA+Eb;;;;GAIG;AACH,SAAS,oBAAoB,CAC3B,MAAS,EAAO;IAEhB,OAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAe,CAAC,MAAM,CAC3C,CAAC,GAAQ,EAAE,GAAG,EAAE,EAAE,CAChB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,mBAAM,GAAG,IAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAE,EAC3D,EAAO,CACR,CAAC;AACJ,CAAC;AA3FC,oDAAoB;AA6FtB;;;;;;GAMG;AACH,SAAS,YAAY,CACnB,KAA0B,EAC1B,MAAkB,EAClB,MAAqB;IAErB,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;IAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAK,CAAC;IACxC,MAAM,CAAC,GAAG,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;IAErD,sCAAsC;IACtC,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAE1B,+CAA+C;IAC/C,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAE9C,MAAM;IACN,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAE/B,eAAe;IACf,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAEhD,gBAAgB;IAChB,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5C,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAE5C,cAAc;IACd,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAEhD,OAAO,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC;AAC3E,CAAC;AAnIC,oCAAY;AAqId,SAAS,QAAQ,CACf,KAA0B,EAC1B,MAAkB,EAClB,MAAqB;IAErB,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACnC,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACnC,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC;IAEpD,IAAI,MAAM,CAAC;IACX,IAAI,MAAM,CAAC;IAEX,uDAAuD;IACvD,EAAE;IACF,IAAI;IACJ,QAAQ;IACR,0DAA0D;IAC1D,OAAO;IACP,OAAO;IACP,IAAI;IACJ,EAAE;IACF,0CAA0C;IAC1C,6DAA6D;IAC7D,QAAQ,KAAK,CAAC,WAAW,EAAE;QACzB,KAAK,yBAAW,CAAC,UAAU;YACzB,MAAM,GAAG,MAAM,CAAC;YAChB,MAAM,GAAG,CAAC,aAAa,CAAC;YACxB,MAAM;QAER,KAAK,yBAAW,CAAC,iBAAiB;YAChC,MAAM,GAAG,MAAM,CAAC;YAChB,MAAM,GAAG,aAAa,CAAC;YACvB,MAAM;QAER,KAAK,yBAAW,CAAC,eAAe;YAC9B,MAAM,GAAG,CAAC,aAAa,CAAC;YACxB,MAAM,GAAG,MAAM,CAAC;YAChB,MAAM;QAER;YACE,MAAM,GAAG,aAAa,CAAC;YACvB,MAAM,GAAG,MAAM,CAAC;YAChB,MAAM;KACT;IAED,kEAAkE;IAClE,EAAE;IACF,SAAS;IACT,iEAAiE;IACjE,OAAO;IACP,MAAM;IACN,IAAI;IACJ,EAAE;IACF,6DAA6D;IAC7D,IAAI,KAAK,CAAC,UAAU,EAAE;QACpB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,aAAa;YAAE,MAAM,GAAG,CAAC,CAAC;KAClD;SAAM;QACL,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,aAAa;YAAE,MAAM,GAAG,CAAC,CAAC;KAClD;IAED,IAAI,KAAK,CAAC,YAAY,EAAE;QACtB,MAAM,IAAI,CAAC,CAAC,CAAC;QACb,MAAM,IAAI,CAAC,CAAC,CAAC;KACd;IAED,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACpC,CAAC;;;;;ACtND,mCAA0D;AAmB1D;;GAEG;AACH,IAAK,UAGJ;AAHD,WAAK,UAAU;IACb,+BAAiB,CAAA;IACjB,mCAAqB,CAAA;AACvB,CAAC,EAHI,UAAU,KAAV,UAAU,QAGd;AAtBC,gCAAU;AA6OC,QAAA,YAAY,GAAG,qBAAqB,CAAC;AAElD;;;;GAIG;AACH,MAAM,QAAQ;IAsBZ,YAAY,OAAwB;QAClC,UAAU;QACV,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACtC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;QAClD,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;QACpC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACtC,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC;QAC9C,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;QAEtD,uBAAuB;QACvB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5C,eAAe;QACf,IAAI,CAAC,MAAM,GAAG;YACZ,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;YAC3B,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;YACxC,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM;YAC1D,OAAO,EAAE,sBAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;YACnD,KAAK,EAAE;gBACL,OAAO,EAAE,uBAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;gBAC5D,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK;gBACzD,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK;gBACrE,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO;gBAChD,IAAI,EACF,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;oBACzB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;oBAC3B,oBAAY;gBACd,YAAY,EAAE,sBAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC;aACpE;SACF,CAAC;QAEF,cAAc;QACd,IAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI;YAChC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI;YAClC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;SAClC,CAAC;QAEF,eAAe;QACf,IAAI,CAAC,MAAM,GAAG;YACZ,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;YAC3B,OAAO,EAAE,sBAAc,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;YACnD,uBAAuB,EAAE,uBAAe,CACtC,OAAO,CAAC,MAAM,CAAC,uBAAuB,EACtC,IAAI,CACL;YACD,GAAG,EAAE;gBACH,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK;gBACvD,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;gBAClC,WAAW,EAAE,sBAAc,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC9D,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW;gBAC3C,IAAI,EACF,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI;oBACvB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;oBAC3B,qBAAqB;aACxB;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,uBAAe,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;gBAC9D,aAAa,EAAE,uBAAe,CAC5B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EACpC,IAAI,CACL;gBACD,WAAW,EAAE,uBAAe,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;gBACtE,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK;gBAC3D,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,oBAAY;aAClD;SACF,CAAC;QAEF,YAAY;QACZ,kEAAkE;QAClE,sDAAsD;QACtD,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC;IAC/B,CAAC;CACF;AA3UC,4BAAQ;AA6UV;;GAEG;AACH,MAAM,kBAAkB,GAAG,IAAI,QAAQ,CAAC;IACtC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/D,MAAM,EAAE;QACN,KAAK,EAAE,SAAS;QAChB,SAAS,EAAE,CAAC;QACZ,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,UAAU,CAAC,QAAQ;KAChC;IACD,MAAM,EAAE;QACN,OAAO,EAAE,EAAE;QACX,GAAG,EAAE;YACH,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,CAAC;SACf;QACD,OAAO,EAAE;YACP,KAAK,EAAE,OAAO;SACf;KACF;IACD,KAAK,EAAE;QACL,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,CAAC,GAAG;KACb;CACF,CAAC,CAAC;AArWD,gDAAkB;AAuWpB;;GAEG;AACH,MAAM,aAAa,GAAG,IAAI,QAAQ,CAAC;IACjC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzC,MAAM,EAAE;QACN,SAAS,EAAE,EAAE;QACb,OAAO,EAAE,EAAE;KACZ;IACD,MAAM,EAAE;QACN,OAAO,EAAE,EAAE;QACX,GAAG,EAAE;YACH,IAAI,EAAE,EAAE;SACT;QACD,OAAO,EAAE;YACP,IAAI,EAAE,mBAAmB;SAC1B;KACF;CACF,CAAC,CAAC;AAxXD,sCAAa;AA0Xf,IAAK,YAGJ;AAHD,WAAK,YAAY;IACf,+BAAe,CAAA;IACf,yCAAyB,CAAA;AAC3B,CAAC,EAHI,YAAY,KAAZ,YAAY,QAGhB;AA/XC,oCAAY;AAiYd;;;;;GAKG;AACH,SAAS,cAAc,CACrB,gBAA8B,EAC9B,OAAwB;IAExB,MAAM,QAAQ,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC;IAE/C,IAAI,CAAC,OAAO,CAAC,MAAM;QAAE,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IACzC,IAAI,CAAC,OAAO,CAAC,MAAM;QAAE,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IAEzC,mEAAmE;IACnE,uCAAuC;IACvC,OAAO;QACL,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM;QACzC,KAAK,oBACA,QAAQ,CAAC,KAAK,EACd,OAAO,CAAC,KAAK,CACjB;QACD,MAAM,oBACD,QAAQ,CAAC,MAAM,EACf,OAAO,CAAC,MAAM,IACjB,KAAK,oBACA,QAAQ,CAAC,MAAM,CAAC,KAAK,EACrB,OAAO,CAAC,MAAM,CAAC,KAAK,IAE1B;QACD,MAAM,oBACD,QAAQ,CAAC,MAAM,EACf,OAAO,CAAC,MAAM,IACjB,GAAG,oBACE,QAAQ,CAAC,MAAM,CAAC,GAAG,EACnB,OAAO,CAAC,MAAM,CAAC,GAAG,GAEvB,OAAO,oBACF,QAAQ,CAAC,MAAM,CAAC,OAAO,EACvB,OAAO,CAAC,MAAM,CAAC,OAAO,IAE5B;QACD,GAAG,oBACE,QAAQ,CAAC,GAAG,EACZ,OAAO,CAAC,GAAG,CACf;KACF,CAAC;AACJ,CAAC;AA9aC,wCAAc;AAgbhB;;;;GAIG;AACH,SAAS,WAAW,CAAC,QAAkC;IACrD,IAAI,CAAC,QAAQ;QAAE,OAAO,aAAa,CAAC;IAEpC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;QAChC,OAAO;YACL,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,kBAAkB;YAC7C,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,aAAa;SACpC,CAAC,QAAQ,CAAC,CAAC;KACb;IAED,OAAO,QAAoB,CAAC;AAC9B,CAAC;AA/bC,kCAAW;;;AChBbxp2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.GitgraphJS = {}));\n}(this, function (exports) { 'use strict';\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tfunction unwrapExports (x) {\n\t\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n\t}\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar orientation = createCommonjsModule(function (module, exports) {\n\t// Extracted from `gitgraph.ts` because it caused `utils` tests to fail\n\t// because of circular dependency between `utils` and `template`.\n\t// It's not clear why (the circular dependency still exist) but `Orientation`\n\t// was the only one causing issue. Maybe because it's an enum?\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar Orientation;\n\t(function (Orientation) {\n\t    Orientation[\"VerticalReverse\"] = \"vertical-reverse\";\n\t    Orientation[\"Horizontal\"] = \"horizontal\";\n\t    Orientation[\"HorizontalReverse\"] = \"horizontal-reverse\";\n\t})(Orientation = exports.Orientation || (exports.Orientation = {}));\n\n\t});\n\n\tunwrapExports(orientation);\n\tvar orientation_1 = orientation.Orientation;\n\n\tvar utils = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\t/**\n\t * Provide a default value to a boolean.\n\t * @param value\n\t * @param defaultValue\n\t */\n\tfunction booleanOptionOr(value, defaultValue) {\n\t    return typeof value === \"boolean\" ? value : defaultValue;\n\t}\n\texports.booleanOptionOr = booleanOptionOr;\n\t/**\n\t * Provide a default value to a number.\n\t * @param value\n\t * @param defaultValue\n\t */\n\tfunction numberOptionOr(value, defaultValue) {\n\t    return typeof value === \"number\" ? value : defaultValue;\n\t}\n\texports.numberOptionOr = numberOptionOr;\n\t/**\n\t * Creates an object composed of the picked object properties.\n\t * @param obj The source object\n\t * @param paths The property paths to pick\n\t */\n\tfunction pick(obj, paths) {\n\t    return Object.assign({}, paths.reduce((mem, key) => (Object.assign({}, mem, { [key]: obj[key] })), {}));\n\t}\n\texports.pick = pick;\n\t/**\n\t * Print a light version of commits into the console.\n\t * @param commits List of commits\n\t * @param paths The property paths to pick\n\t */\n\tfunction debug(commits, paths) {\n\t    // tslint:disable-next-line:no-console\n\t    console.log(JSON.stringify(commits.map((commit) => pick(commit, paths)), null, 2));\n\t}\n\texports.debug = debug;\n\t/**\n\t * Return true if is undefined.\n\t *\n\t * @param obj\n\t */\n\tfunction isUndefined(obj) {\n\t    return obj === undefined;\n\t}\n\texports.isUndefined = isUndefined;\n\t/**\n\t * Return a version of the object without any undefined keys.\n\t *\n\t * @param obj\n\t */\n\tfunction withoutUndefinedKeys(obj = {}) {\n\t    return Object.keys(obj).reduce((mem, key) => isUndefined(obj[key]) ? mem : Object.assign({}, mem, { [key]: obj[key] }), {});\n\t}\n\texports.withoutUndefinedKeys = withoutUndefinedKeys;\n\t/**\n\t * Return a string ready to use in `svg.path.d` to draw an arrow from params.\n\t *\n\t * @param graph Graph context\n\t * @param parent Parent commit of the target commit\n\t * @param commit Target commit\n\t */\n\tfunction arrowSvgPath(graph, parent, commit) {\n\t    const commitRadius = commit.style.dot.size;\n\t    const size = graph.template.arrow.size;\n\t    const h = commitRadius + graph.template.arrow.offset;\n\t    // Delta between left & right (radian)\n\t    const delta = Math.PI / 7;\n\t    // Alpha angle between parent & commit (radian)\n\t    const alpha = getAlpha(graph, parent, commit);\n\t    // Top\n\t    const x1 = h * Math.cos(alpha);\n\t    const y1 = h * Math.sin(alpha);\n\t    // Bottom right\n\t    const x2 = (h + size) * Math.cos(alpha - delta);\n\t    const y2 = (h + size) * Math.sin(alpha - delta);\n\t    // Bottom center\n\t    const x3 = (h + size / 2) * Math.cos(alpha);\n\t    const y3 = (h + size / 2) * Math.sin(alpha);\n\t    // Bottom left\n\t    const x4 = (h + size) * Math.cos(alpha + delta);\n\t    const y4 = (h + size) * Math.sin(alpha + delta);\n\t    return `M${x1},${y1} L${x2},${y2} Q${x3},${y3} ${x4},${y4} L${x4},${y4}`;\n\t}\n\texports.arrowSvgPath = arrowSvgPath;\n\tfunction getAlpha(graph, parent, commit) {\n\t    const deltaX = parent.x - commit.x;\n\t    const deltaY = parent.y - commit.y;\n\t    const commitSpacing = graph.template.commit.spacing;\n\t    let alphaY;\n\t    let alphaX;\n\t    // Angle usually start from previous commit Y position:\n\t    //\n\t    // o\n\t    // ↑ ↖ ︎\n\t    // o  |  <-- path is straight until last commit Y position\n\t    // ↑  o\n\t    // | ↗︎\n\t    // o\n\t    //\n\t    // So we can to default to commit spacing.\n\t    // For horizontal orientation => same with commit X position.\n\t    switch (graph.orientation) {\n\t        case orientation.Orientation.Horizontal:\n\t            alphaY = deltaY;\n\t            alphaX = -commitSpacing;\n\t            break;\n\t        case orientation.Orientation.HorizontalReverse:\n\t            alphaY = deltaY;\n\t            alphaX = commitSpacing;\n\t            break;\n\t        case orientation.Orientation.VerticalReverse:\n\t            alphaY = -commitSpacing;\n\t            alphaX = deltaX;\n\t            break;\n\t        default:\n\t            alphaY = commitSpacing;\n\t            alphaX = deltaX;\n\t            break;\n\t    }\n\t    // If commit is distant from its parent, there should be no angle.\n\t    //\n\t    //    o ︎\n\t    //    ↑  <-- arrow is like previous commit was on same X position\n\t    // o  |\n\t    // | /\n\t    // o\n\t    //\n\t    // For horizontal orientation => same with commit Y position.\n\t    if (graph.isVertical) {\n\t        if (Math.abs(deltaY) > commitSpacing)\n\t            alphaX = 0;\n\t    }\n\t    else {\n\t        if (Math.abs(deltaX) > commitSpacing)\n\t            alphaY = 0;\n\t    }\n\t    if (graph.reverseArrow) {\n\t        alphaY *= -1;\n\t        alphaX *= -1;\n\t    }\n\t    return Math.atan2(alphaY, alphaX);\n\t}\n\n\t});\n\n\tunwrapExports(utils);\n\tvar utils_1 = utils.booleanOptionOr;\n\tvar utils_2 = utils.numberOptionOr;\n\tvar utils_3 = utils.pick;\n\tvar utils_4 = utils.debug;\n\tvar utils_5 = utils.isUndefined;\n\tvar utils_6 = utils.withoutUndefinedKeys;\n\tvar utils_7 = utils.arrowSvgPath;\n\n\tvar template = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\t/**\n\t * Branch merge style enum\n\t */\n\tvar MergeStyle;\n\t(function (MergeStyle) {\n\t    MergeStyle[\"Bezier\"] = \"bezier\";\n\t    MergeStyle[\"Straight\"] = \"straight\";\n\t})(MergeStyle || (MergeStyle = {}));\n\texports.MergeStyle = MergeStyle;\n\texports.DEFAULT_FONT = \"normal 12pt Calibri\";\n\t/**\n\t * Gitgraph template\n\t *\n\t * Set of design rules for the rendering.\n\t */\n\tclass Template {\n\t    constructor(options) {\n\t        // Options\n\t        options.branch = options.branch || {};\n\t        options.branch.label = options.branch.label || {};\n\t        options.arrow = options.arrow || {};\n\t        options.commit = options.commit || {};\n\t        options.commit.dot = options.commit.dot || {};\n\t        options.commit.message = options.commit.message || {};\n\t        // One color per column\n\t        this.colors = options.colors || [\"#000000\"];\n\t        // Branch style\n\t        this.branch = {\n\t            color: options.branch.color,\n\t            lineWidth: options.branch.lineWidth || 2,\n\t            mergeStyle: options.branch.mergeStyle || MergeStyle.Bezier,\n\t            spacing: utils.numberOptionOr(options.branch.spacing, 20),\n\t            label: {\n\t                display: utils.booleanOptionOr(options.branch.label.display, true),\n\t                color: options.branch.label.color || options.commit.color,\n\t                strokeColor: options.branch.label.strokeColor || options.commit.color,\n\t                bgColor: options.branch.label.bgColor || \"white\",\n\t                font: options.branch.label.font ||\n\t                    options.commit.message.font ||\n\t                    exports.DEFAULT_FONT,\n\t                borderRadius: utils.numberOptionOr(options.branch.label.borderRadius, 10),\n\t            },\n\t        };\n\t        // Arrow style\n\t        this.arrow = {\n\t            size: options.arrow.size || null,\n\t            color: options.arrow.color || null,\n\t            offset: options.arrow.offset || 2,\n\t        };\n\t        // Commit style\n\t        this.commit = {\n\t            color: options.commit.color,\n\t            spacing: utils.numberOptionOr(options.commit.spacing, 25),\n\t            hasTooltipInCompactMode: utils.booleanOptionOr(options.commit.hasTooltipInCompactMode, true),\n\t            dot: {\n\t                color: options.commit.dot.color || options.commit.color,\n\t                size: options.commit.dot.size || 3,\n\t                strokeWidth: utils.numberOptionOr(options.commit.dot.strokeWidth, 0),\n\t                strokeColor: options.commit.dot.strokeColor,\n\t                font: options.commit.dot.font ||\n\t                    options.commit.message.font ||\n\t                    \"normal 10pt Calibri\",\n\t            },\n\t            message: {\n\t                display: utils.booleanOptionOr(options.commit.message.display, true),\n\t                displayAuthor: utils.booleanOptionOr(options.commit.message.displayAuthor, true),\n\t                displayHash: utils.booleanOptionOr(options.commit.message.displayHash, true),\n\t                color: options.commit.message.color || options.commit.color,\n\t                font: options.commit.message.font || exports.DEFAULT_FONT,\n\t            },\n\t        };\n\t        // Tag style\n\t        // This one is computed in the Tag instance. It needs Commit style\n\t        // that is partially computed at runtime (for colors).\n\t        this.tag = options.tag || {};\n\t    }\n\t}\n\texports.Template = Template;\n\t/**\n\t * Black arrow template\n\t */\n\tconst blackArrowTemplate = new Template({\n\t    colors: [\"#6963FF\", \"#47E8D4\", \"#6BDB52\", \"#E84BA5\", \"#FFA657\"],\n\t    branch: {\n\t        color: \"#000000\",\n\t        lineWidth: 4,\n\t        spacing: 50,\n\t        mergeStyle: MergeStyle.Straight,\n\t    },\n\t    commit: {\n\t        spacing: 60,\n\t        dot: {\n\t            size: 16,\n\t            strokeColor: \"#000000\",\n\t            strokeWidth: 4,\n\t        },\n\t        message: {\n\t            color: \"black\",\n\t        },\n\t    },\n\t    arrow: {\n\t        size: 16,\n\t        offset: -1.5,\n\t    },\n\t});\n\texports.blackArrowTemplate = blackArrowTemplate;\n\t/**\n\t * Metro template\n\t */\n\tconst metroTemplate = new Template({\n\t    colors: [\"#979797\", \"#008fb5\", \"#f1c109\"],\n\t    branch: {\n\t        lineWidth: 10,\n\t        spacing: 50,\n\t    },\n\t    commit: {\n\t        spacing: 80,\n\t        dot: {\n\t            size: 14,\n\t        },\n\t        message: {\n\t            font: \"normal 14pt Arial\",\n\t        },\n\t    },\n\t});\n\texports.metroTemplate = metroTemplate;\n\tvar TemplateName;\n\t(function (TemplateName) {\n\t    TemplateName[\"Metro\"] = \"metro\";\n\t    TemplateName[\"BlackArrow\"] = \"blackarrow\";\n\t})(TemplateName || (TemplateName = {}));\n\texports.TemplateName = TemplateName;\n\t/**\n\t * Extend an existing template with new options.\n\t *\n\t * @param selectedTemplate Template to extend\n\t * @param options Template options\n\t */\n\tfunction templateExtend(selectedTemplate, options) {\n\t    const template = getTemplate(selectedTemplate);\n\t    if (!options.branch)\n\t        options.branch = {};\n\t    if (!options.commit)\n\t        options.commit = {};\n\t    // This is tedious, but it seems acceptable so we don't need lodash\n\t    // as we want to keep bundlesize small.\n\t    return {\n\t        colors: options.colors || template.colors,\n\t        arrow: Object.assign({}, template.arrow, options.arrow),\n\t        branch: Object.assign({}, template.branch, options.branch, { label: Object.assign({}, template.branch.label, options.branch.label) }),\n\t        commit: Object.assign({}, template.commit, options.commit, { dot: Object.assign({}, template.commit.dot, options.commit.dot), message: Object.assign({}, template.commit.message, options.commit.message) }),\n\t        tag: Object.assign({}, template.tag, options.tag),\n\t    };\n\t}\n\texports.templateExtend = templateExtend;\n\t/**\n\t * Resolve the template to use regarding given `template` value.\n\t *\n\t * @param template Selected template name, or instance.\n\t */\n\tfunction getTemplate(template) {\n\t    if (!template)\n\t        return metroTemplate;\n\t    if (typeof template === \"string\") {\n\t        return {\n\t            [TemplateName.BlackArrow]: blackArrowTemplate,\n\t            [TemplateName.Metro]: metroTemplate,\n\t        }[template];\n\t    }\n\t    return template;\n\t}\n\texports.getTemplate = getTemplate;\n\n\t});\n\n\tunwrapExports(template);\n\tvar template_1 = template.MergeStyle;\n\tvar template_2 = template.DEFAULT_FONT;\n\tvar template_3 = template.Template;\n\tvar template_4 = template.blackArrowTemplate;\n\tvar template_5 = template.metroTemplate;\n\tvar template_6 = template.TemplateName;\n\tvar template_7 = template.templateExtend;\n\tvar template_8 = template.getTemplate;\n\n\tvar tag = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\tclass Tag {\n\t    constructor(name, style, render, commitStyle) {\n\t        this.name = name;\n\t        this.tagStyle = style;\n\t        this.commitStyle = commitStyle;\n\t        this.render = render;\n\t    }\n\t    /**\n\t     * Style\n\t     */\n\t    get style() {\n\t        return {\n\t            strokeColor: this.tagStyle.strokeColor || this.commitStyle.color,\n\t            bgColor: this.tagStyle.bgColor || this.commitStyle.color,\n\t            color: this.tagStyle.color || \"white\",\n\t            font: this.tagStyle.font || this.commitStyle.message.font || template.DEFAULT_FONT,\n\t            borderRadius: utils.numberOptionOr(this.tagStyle.borderRadius, 10),\n\t            pointerWidth: utils.numberOptionOr(this.tagStyle.pointerWidth, 12),\n\t        };\n\t    }\n\t}\n\texports.Tag = Tag;\n\n\t});\n\n\tunwrapExports(tag);\n\tvar tag_1 = tag.Tag;\n\n\tvar commit = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\t/**\n\t * Generate a random hash.\n\t *\n\t * @return hex string with 40 chars\n\t */\n\tconst getRandomHash = () => (Math.random()\n\t    .toString(16)\n\t    .substring(3) +\n\t    Math.random()\n\t        .toString(16)\n\t        .substring(3) +\n\t    Math.random()\n\t        .toString(16)\n\t        .substring(3) +\n\t    Math.random()\n\t        .toString(16)\n\t        .substring(3)).substring(0, 40);\n\tclass Commit {\n\t    constructor(options) {\n\t        /**\n\t         * Ref names\n\t         */\n\t        this.refs = [];\n\t        /**\n\t         * Commit x position\n\t         */\n\t        this.x = 0;\n\t        /**\n\t         * Commit y position\n\t         */\n\t        this.y = 0;\n\t        // Set author & committer\n\t        let name, email;\n\t        try {\n\t            [, name, email] = options.author.match(/(.*) <(.*)>/);\n\t        }\n\t        catch (e) {\n\t            [name, email] = [options.author, \"\"];\n\t        }\n\t        this.author = { name, email, timestamp: Date.now() };\n\t        this.committer = { name, email, timestamp: Date.now() };\n\t        // Set commit message\n\t        this.subject = options.subject;\n\t        this.body = options.body || \"\";\n\t        // Set commit hash\n\t        this.hash = options.hash || getRandomHash();\n\t        this.hashAbbrev = this.hash.substring(0, 7);\n\t        // Set parent hash\n\t        this.parents = options.parents ? options.parents : [];\n\t        this.parentsAbbrev = this.parents.map((commit) => commit.substring(0, 7));\n\t        // Set style\n\t        this.style = Object.assign({}, options.style, { message: Object.assign({}, options.style.message), dot: Object.assign({}, options.style.dot) });\n\t        this.dotText = options.dotText;\n\t        // Set callbacks\n\t        this.onClick = () => (options.onClick ? options.onClick(this) : undefined);\n\t        this.onMessageClick = () => options.onMessageClick ? options.onMessageClick(this) : undefined;\n\t        this.onMouseOver = () => options.onMouseOver ? options.onMouseOver(this) : undefined;\n\t        this.onMouseOut = () => options.onMouseOut ? options.onMouseOut(this) : undefined;\n\t        // Set custom renders\n\t        this.renderDot = options.renderDot;\n\t        this.renderMessage = options.renderMessage;\n\t        this.renderTooltip = options.renderTooltip;\n\t    }\n\t    /**\n\t     * Message\n\t     */\n\t    get message() {\n\t        let message = \"\";\n\t        if (this.style.message.displayHash) {\n\t            message += `${this.hashAbbrev} `;\n\t        }\n\t        message += this.subject;\n\t        if (this.style.message.displayAuthor) {\n\t            message += ` - ${this.author.name} <${this.author.email}>`;\n\t        }\n\t        return message;\n\t    }\n\t    /**\n\t     * Branch that should be rendered\n\t     */\n\t    get branchToDisplay() {\n\t        return this.branches ? this.branches[0] : \"\";\n\t    }\n\t    setRefs(refs) {\n\t        this.refs = refs.getNames(this.hash);\n\t        return this;\n\t    }\n\t    setTags(tags, getTagStyle, getTagRender) {\n\t        this.tags = tags\n\t            .getNames(this.hash)\n\t            .map((name) => new tag.Tag(name, getTagStyle(name), getTagRender(name), this.style));\n\t        return this;\n\t    }\n\t    setBranches(branches) {\n\t        this.branches = branches;\n\t        return this;\n\t    }\n\t    setPosition({ x, y }) {\n\t        this.x = x;\n\t        this.y = y;\n\t        return this;\n\t    }\n\t    withDefaultColor(color) {\n\t        const newStyle = Object.assign({}, this.style, { dot: Object.assign({}, this.style.dot), message: Object.assign({}, this.style.message) });\n\t        if (!newStyle.color)\n\t            newStyle.color = color;\n\t        if (!newStyle.dot.color)\n\t            newStyle.dot.color = color;\n\t        if (!newStyle.message.color)\n\t            newStyle.message.color = color;\n\t        const commit = this.cloneCommit();\n\t        commit.style = newStyle;\n\t        return commit;\n\t    }\n\t    /**\n\t     * Ideally, we want Commit to be a [Value Object](https://martinfowler.com/bliki/ValueObject.html).\n\t     * We started with a mutable class. So we'll refactor that little by little.\n\t     * This private function is a helper to create a new Commit from existing one.\n\t     */\n\t    cloneCommit() {\n\t        const commit = new Commit({\n\t            author: `${this.author.name} <${this.author.email}>`,\n\t            subject: this.subject,\n\t            style: this.style,\n\t            body: this.body,\n\t            hash: this.hash,\n\t            parents: this.parents,\n\t            dotText: this.dotText,\n\t            onClick: this.onClick,\n\t            onMessageClick: this.onMessageClick,\n\t            onMouseOver: this.onMouseOver,\n\t            onMouseOut: this.onMouseOut,\n\t            renderDot: this.renderDot,\n\t            renderMessage: this.renderMessage,\n\t            renderTooltip: this.renderTooltip,\n\t        });\n\t        commit.refs = this.refs;\n\t        commit.branches = this.branches;\n\t        commit.tags = this.tags;\n\t        commit.x = this.x;\n\t        commit.y = this.y;\n\t        return commit;\n\t    }\n\t}\n\texports.Commit = Commit;\n\n\t});\n\n\tunwrapExports(commit);\n\tvar commit_1 = commit.Commit;\n\n\tvar branchUserApi = createCommonjsModule(function (module, exports) {\n\tvar __rest = (commonjsGlobal && commonjsGlobal.__rest) || function (s, e) {\n\t    var t = {};\n\t    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n\t        t[p] = s[p];\n\t    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n\t        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n\t            t[p[i]] = s[p[i]];\n\t    return t;\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\tclass BranchUserApi {\n\t    // tslint:enable:variable-name\n\t    constructor(branch, graph, onGraphUpdate) {\n\t        this._branch = branch;\n\t        this.name = branch.name;\n\t        this._graph = graph;\n\t        this._onGraphUpdate = onGraphUpdate;\n\t    }\n\t    branch(args) {\n\t        const options = typeof args === \"string\" ? { name: args } : args;\n\t        options.from = this;\n\t        return this._graph.createBranch(options).getUserApi();\n\t    }\n\t    commit(options) {\n\t        // Deal with shorter syntax\n\t        if (typeof options === \"string\")\n\t            options = { subject: options };\n\t        if (!options)\n\t            options = {};\n\t        this._commitWithParents(options, []);\n\t        this._onGraphUpdate();\n\t        return this;\n\t    }\n\t    merge(...args) {\n\t        let options = args[0];\n\t        if (!isBranchMergeOptions(options)) {\n\t            options = {\n\t                branch: args[0],\n\t                fastForward: false,\n\t                commitOptions: { subject: args[1] },\n\t            };\n\t        }\n\t        const { branch, fastForward, commitOptions, } = options;\n\t        const branchName = typeof branch === \"string\" ? branch : branch.name;\n\t        const branchLastCommitHash = this._graph.refs.getCommit(branchName);\n\t        if (!branchLastCommitHash) {\n\t            throw new Error(`The branch called \"${branchName}\" is unknown`);\n\t        }\n\t        let canFastForward = false;\n\t        const lastCommitHash = this._graph.refs.getCommit(this._branch.name);\n\t        if (lastCommitHash) {\n\t            canFastForward = this._areCommitsConnected(lastCommitHash, branchLastCommitHash);\n\t        }\n\t        else {\n\t            canFastForward = false;\n\t        }\n\t        if (fastForward && canFastForward) {\n\t            this._fastForwardTo(branchLastCommitHash);\n\t        }\n\t        else {\n\t            this._commitWithParents(Object.assign({}, commitOptions, { subject: (commitOptions && commitOptions.subject) ||\n\t                    `Merge branch ${branchName}` }), [branchLastCommitHash]);\n\t        }\n\t        this._onGraphUpdate();\n\t        return this;\n\t    }\n\t    tag(options) {\n\t        if (typeof options === \"string\") {\n\t            this._graph.getUserApi().tag({ name: options, ref: this._branch.name });\n\t        }\n\t        else {\n\t            this._graph.getUserApi().tag(Object.assign({}, options, { ref: this._branch.name }));\n\t        }\n\t        return this;\n\t    }\n\t    /**\n\t     * Checkout onto this branch.\n\t     */\n\t    checkout() {\n\t        this._graph.currentBranch = this._branch;\n\t        return this;\n\t    }\n\t    // tslint:disable:variable-name - Prefix `_` = explicitly private for JS users\n\t    _commitWithParents(options, parents) {\n\t        const parentOnSameBranch = this._graph.refs.getCommit(this._branch.name);\n\t        if (parentOnSameBranch) {\n\t            parents.unshift(parentOnSameBranch);\n\t        }\n\t        else if (this._branch.parentCommitHash) {\n\t            parents.unshift(this._branch.parentCommitHash);\n\t        }\n\t        const { tag } = options, commitOptions = __rest(options, [\"tag\"]);\n\t        const commit$1 = new commit.Commit(Object.assign({ hash: this._graph.generateCommitHash(), author: this._branch.commitDefaultOptions.author || this._graph.author, subject: this._branch.commitDefaultOptions.subject ||\n\t                this._graph.commitMessage }, commitOptions, { parents, style: this._getCommitStyle(options.style) }));\n\t        if (parentOnSameBranch) {\n\t            // Take all the refs from the parent\n\t            const parentRefs = this._graph.refs.getNames(parentOnSameBranch);\n\t            parentRefs.forEach((ref) => this._graph.refs.set(ref, commit$1.hash));\n\t        }\n\t        else {\n\t            // Set the branch ref\n\t            this._graph.refs.set(this._branch.name, commit$1.hash);\n\t        }\n\t        // Add the new commit\n\t        this._graph.commits.push(commit$1);\n\t        // Move HEAD on the last commit\n\t        this.checkout();\n\t        this._graph.refs.set(\"HEAD\", commit$1.hash);\n\t        // Add a tag to the commit if `option.tag` is provide\n\t        if (tag)\n\t            this.tag(tag);\n\t    }\n\t    _areCommitsConnected(parentCommitHash, childCommitHash) {\n\t        const childCommit = this._graph.commits.find(({ hash }) => childCommitHash === hash);\n\t        if (!childCommit)\n\t            return false;\n\t        const isFirstCommitOfGraph = childCommit.parents.length === 0;\n\t        if (isFirstCommitOfGraph)\n\t            return false;\n\t        if (childCommit.parents.includes(parentCommitHash)) {\n\t            return true;\n\t        }\n\t        // `childCommitHash` is not a direct child of `parentCommitHash`.\n\t        // But maybe one of `childCommitHash` parent is.\n\t        return childCommit.parents.some((directParentHash) => this._areCommitsConnected(parentCommitHash, directParentHash));\n\t    }\n\t    _fastForwardTo(commitHash) {\n\t        this._graph.refs.set(this._branch.name, commitHash);\n\t    }\n\t    _getCommitStyle(style = {}) {\n\t        return Object.assign({}, utils.withoutUndefinedKeys(this._graph.template.commit), utils.withoutUndefinedKeys(this._branch.commitDefaultOptions.style), style, { message: Object.assign({}, utils.withoutUndefinedKeys(this._graph.template.commit.message), utils.withoutUndefinedKeys(this._branch.commitDefaultOptions.style.message), style.message, utils.withoutUndefinedKeys({\n\t                display: this._graph.shouldDisplayCommitMessage && undefined,\n\t            })), dot: Object.assign({}, utils.withoutUndefinedKeys(this._graph.template.commit.dot), utils.withoutUndefinedKeys(this._branch.commitDefaultOptions.style.dot), style.dot) });\n\t    }\n\t}\n\texports.BranchUserApi = BranchUserApi;\n\tfunction isBranchMergeOptions(options) {\n\t    return typeof options === \"object\" && !(options instanceof BranchUserApi);\n\t}\n\n\t});\n\n\tunwrapExports(branchUserApi);\n\tvar branchUserApi_1 = branchUserApi.BranchUserApi;\n\n\tvar branch = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\tconst DELETED_BRANCH_NAME = \"\";\n\texports.DELETED_BRANCH_NAME = DELETED_BRANCH_NAME;\n\tclass Branch {\n\t    constructor(options) {\n\t        this.gitgraph = options.gitgraph;\n\t        this.name = options.name;\n\t        this.style = options.style;\n\t        this.parentCommitHash = options.parentCommitHash;\n\t        this.commitDefaultOptions = options.commitDefaultOptions || { style: {} };\n\t        this.onGraphUpdate = options.onGraphUpdate;\n\t        this.renderLabel = options.renderLabel;\n\t    }\n\t    /**\n\t     * Return the API to manipulate Gitgraph branch as a user.\n\t     */\n\t    getUserApi() {\n\t        return new branchUserApi.BranchUserApi(this, this.gitgraph, this.onGraphUpdate);\n\t    }\n\t    /**\n\t     * Return true if branch was deleted.\n\t     */\n\t    isDeleted() {\n\t        return this.name === DELETED_BRANCH_NAME;\n\t    }\n\t}\n\texports.Branch = Branch;\n\tfunction createDeletedBranch(gitgraph, style, onGraphUpdate) {\n\t    return new Branch({\n\t        name: DELETED_BRANCH_NAME,\n\t        gitgraph,\n\t        style,\n\t        onGraphUpdate,\n\t    });\n\t}\n\texports.createDeletedBranch = createDeletedBranch;\n\n\t});\n\n\tunwrapExports(branch);\n\tvar branch_1 = branch.DELETED_BRANCH_NAME;\n\tvar branch_2 = branch.Branch;\n\tvar branch_3 = branch.createDeletedBranch;\n\n\tvar mode = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar Mode;\n\t(function (Mode) {\n\t    Mode[\"Compact\"] = \"compact\";\n\t})(Mode || (Mode = {}));\n\texports.Mode = Mode;\n\n\t});\n\n\tunwrapExports(mode);\n\tvar mode_1 = mode.Mode;\n\n\tvar regular = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tclass RegularGraphRows {\n\t    constructor(commits) {\n\t        this.rows = new Map();\n\t        this.maxRowCache = undefined;\n\t        this.computeRowsFromCommits(commits);\n\t    }\n\t    getRowOf(commitHash) {\n\t        return this.rows.get(commitHash) || 0;\n\t    }\n\t    getMaxRow() {\n\t        if (this.maxRowCache === undefined) {\n\t            this.maxRowCache = uniq(Array.from(this.rows.values())).length - 1;\n\t        }\n\t        return this.maxRowCache;\n\t    }\n\t    computeRowsFromCommits(commits) {\n\t        commits.forEach((commit, i) => {\n\t            this.rows.set(commit.hash, i);\n\t        });\n\t        this.maxRowCache = undefined;\n\t    }\n\t}\n\texports.RegularGraphRows = RegularGraphRows;\n\t/**\n\t * Creates a duplicate-free version of an array.\n\t *\n\t * Don't use lodash's `uniq` as it increased bundlesize a lot for such a\n\t * simple function.\n\t * => The way we bundle for browser seems not to work with `lodash-es`.\n\t * => I didn't to get tree-shaking to work with `lodash` (the CommonJS version).\n\t *\n\t * @param array Array of values\n\t */\n\tfunction uniq(array) {\n\t    const set = new Set();\n\t    array.forEach((value) => set.add(value));\n\t    return Array.from(set);\n\t}\n\n\t});\n\n\tunwrapExports(regular);\n\tvar regular_1 = regular.RegularGraphRows;\n\n\tvar compact = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\tclass CompactGraphRows extends regular.RegularGraphRows {\n\t    computeRowsFromCommits(commits) {\n\t        commits.forEach((commit, i) => {\n\t            let newRow = i;\n\t            const isFirstCommit = i === 0;\n\t            if (!isFirstCommit) {\n\t                const parentRow = this.getRowOf(commit.parents[0]);\n\t                const historyParent = commits[i - 1];\n\t                newRow = Math.max(parentRow + 1, this.getRowOf(historyParent.hash));\n\t                const isMergeCommit = commit.parents.length > 1;\n\t                if (isMergeCommit) {\n\t                    // Push commit to next row to avoid collision when the branch in which\n\t                    // the merge happens has more commits than the merged branch.\n\t                    const mergeTargetParentRow = this.getRowOf(commit.parents[1]);\n\t                    if (parentRow < mergeTargetParentRow)\n\t                        newRow++;\n\t                }\n\t            }\n\t            this.rows.set(commit.hash, newRow);\n\t        });\n\t    }\n\t}\n\texports.CompactGraphRows = CompactGraphRows;\n\n\t});\n\n\tunwrapExports(compact);\n\tvar compact_1 = compact.CompactGraphRows;\n\n\tvar graphRows = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\texports.GraphRows = regular.RegularGraphRows;\n\tfunction createGraphRows(mode$1, commits) {\n\t    return mode$1 === mode.Mode.Compact\n\t        ? new compact.CompactGraphRows(commits)\n\t        : new regular.RegularGraphRows(commits);\n\t}\n\texports.createGraphRows = createGraphRows;\n\n\t});\n\n\tunwrapExports(graphRows);\n\tvar graphRows_1 = graphRows.GraphRows;\n\tvar graphRows_2 = graphRows.createGraphRows;\n\n\tvar branchesOrder = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tclass BranchesOrder {\n\t    constructor(commits, colors, compareFunction) {\n\t        this.branches = new Set();\n\t        this.colors = colors;\n\t        commits.forEach((commit) => this.branches.add(commit.branchToDisplay));\n\t        if (compareFunction) {\n\t            this.branches = new Set(Array.from(this.branches).sort(compareFunction));\n\t        }\n\t    }\n\t    /**\n\t     * Return the order of the given branch name.\n\t     *\n\t     * @param branchName Name of the branch\n\t     */\n\t    get(branchName) {\n\t        return Array.from(this.branches).findIndex((branch) => branch === branchName);\n\t    }\n\t    /**\n\t     * Return the color of the given branch.\n\t     *\n\t     * @param branchName Name of the branch\n\t     */\n\t    getColorOf(branchName) {\n\t        return this.colors[this.get(branchName) % this.colors.length];\n\t    }\n\t}\n\texports.BranchesOrder = BranchesOrder;\n\n\t});\n\n\tunwrapExports(branchesOrder);\n\tvar branchesOrder_1 = branchesOrder.BranchesOrder;\n\n\tvar refs = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tclass Refs {\n\t    constructor() {\n\t        this.commitPerName = new Map();\n\t        this.namesPerCommit = new Map();\n\t    }\n\t    /**\n\t     * Set a new reference to a commit hash.\n\t     *\n\t     * @param name Name of the ref (ex: \"master\", \"v1.0\")\n\t     * @param commitHash Commit hash\n\t     */\n\t    set(name, commitHash) {\n\t        const prevCommitHash = this.commitPerName.get(name);\n\t        if (prevCommitHash) {\n\t            this.removeNameFrom(prevCommitHash, name);\n\t        }\n\t        this.addNameTo(commitHash, name);\n\t        this.addCommitTo(name, commitHash);\n\t        return this;\n\t    }\n\t    /**\n\t     * Get the commit hash associated with the given reference name.\n\t     *\n\t     * @param name Name of the ref\n\t     */\n\t    getCommit(name) {\n\t        return this.commitPerName.get(name);\n\t    }\n\t    /**\n\t     * Get the list of reference names associated with given commit hash.\n\t     *\n\t     * @param commitHash Commit hash\n\t     */\n\t    getNames(commitHash) {\n\t        return this.namesPerCommit.get(commitHash) || [];\n\t    }\n\t    /**\n\t     * Get all reference names known.\n\t     */\n\t    getAllNames() {\n\t        return Array.from(this.commitPerName.keys());\n\t    }\n\t    /**\n\t     * Returns true if given commit hash is referenced.\n\t     *\n\t     * @param commitHash Commit hash\n\t     */\n\t    hasCommit(commitHash) {\n\t        return this.namesPerCommit.has(commitHash);\n\t    }\n\t    /**\n\t     * Returns true if given reference name exists.\n\t     *\n\t     * @param name Name of the ref\n\t     */\n\t    hasName(name) {\n\t        return this.commitPerName.has(name);\n\t    }\n\t    removeNameFrom(commitHash, nameToRemove) {\n\t        const names = this.namesPerCommit.get(commitHash) || [];\n\t        this.namesPerCommit.set(commitHash, names.filter((name) => name !== nameToRemove));\n\t    }\n\t    addNameTo(commitHash, nameToAdd) {\n\t        const prevNames = this.namesPerCommit.get(commitHash) || [];\n\t        this.namesPerCommit.set(commitHash, [...prevNames, nameToAdd]);\n\t    }\n\t    addCommitTo(name, commitHashToAdd) {\n\t        this.commitPerName.set(name, commitHashToAdd);\n\t    }\n\t}\n\texports.Refs = Refs;\n\n\t});\n\n\tunwrapExports(refs);\n\tvar refs_1 = refs.Refs;\n\n\tvar branchesPaths = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\t/**\n\t * Calculate branches paths of the graph.\n\t *\n\t * It follows the Command pattern:\n\t * => a class with a single `execute()` public method.\n\t *\n\t * Main benefit is we can split computation in smaller steps without\n\t * passing around parameters (we can rely on private data).\n\t */\n\tclass BranchesPathsCalculator {\n\t    constructor(commits, branches, commitSpacing, isGraphVertical, isGraphReverse, createDeletedBranch) {\n\t        this.branchesPaths = new Map();\n\t        this.commits = commits;\n\t        this.branches = branches;\n\t        this.commitSpacing = commitSpacing;\n\t        this.isGraphVertical = isGraphVertical;\n\t        this.isGraphReverse = isGraphReverse;\n\t        this.createDeletedBranch = createDeletedBranch;\n\t    }\n\t    /**\n\t     * Compute branches paths for graph.\n\t     */\n\t    execute() {\n\t        this.fromCommits();\n\t        this.withMergeCommits();\n\t        return this.smoothBranchesPaths();\n\t    }\n\t    /**\n\t     * Initialize branches paths from calculator's commits.\n\t     */\n\t    fromCommits() {\n\t        this.commits.forEach((commit) => {\n\t            let branch = this.branches.get(commit.branchToDisplay);\n\t            if (!branch) {\n\t                // NB: may not work properly if there are many deleted branches.\n\t                branch = this.getDeletedBranchInPath() || this.createDeletedBranch();\n\t            }\n\t            const path = [];\n\t            const existingBranchPath = this.branchesPaths.get(branch);\n\t            const firstParentCommit = this.commits.find(({ hash }) => hash === commit.parents[0]);\n\t            if (existingBranchPath) {\n\t                path.push(...existingBranchPath);\n\t            }\n\t            else if (firstParentCommit) {\n\t                // Make branch path starts from parent branch (parent commit).\n\t                path.push({ x: firstParentCommit.x, y: firstParentCommit.y });\n\t            }\n\t            path.push({ x: commit.x, y: commit.y });\n\t            this.branchesPaths.set(branch, path);\n\t        });\n\t    }\n\t    /**\n\t     * Insert merge commits points into `branchesPaths`.\n\t     *\n\t     * @example\n\t     *     // Before\n\t     *     [\n\t     *       { x: 0, y: 640 },\n\t     *       { x: 50, y: 560 }\n\t     *     ]\n\t     *\n\t     *     // After\n\t     *     [\n\t     *       { x: 0, y: 640 },\n\t     *       { x: 50, y: 560 },\n\t     *       { x: 50, y: 560, mergeCommit: true }\n\t     *     ]\n\t     */\n\t    withMergeCommits() {\n\t        const mergeCommits = this.commits.filter(({ parents }) => parents.length > 1);\n\t        mergeCommits.forEach((mergeCommit) => {\n\t            const parentOnOriginBranch = this.commits.find(({ hash }) => {\n\t                return hash === mergeCommit.parents[1];\n\t            });\n\t            if (!parentOnOriginBranch)\n\t                return;\n\t            const originBranchName = parentOnOriginBranch.branches\n\t                ? parentOnOriginBranch.branches[0]\n\t                : \"\";\n\t            let branch = this.branches.get(originBranchName);\n\t            if (!branch) {\n\t                branch = this.getDeletedBranchInPath();\n\t                if (!branch) {\n\t                    // Still no branch? That's strange, we shouldn't set anything.\n\t                    return;\n\t                }\n\t            }\n\t            const lastPoints = [...(this.branchesPaths.get(branch) || [])];\n\t            this.branchesPaths.set(branch, [\n\t                ...lastPoints,\n\t                { x: mergeCommit.x, y: mergeCommit.y, mergeCommit: true },\n\t            ]);\n\t        });\n\t    }\n\t    /**\n\t     * Retrieve deleted branch from calculator's branches paths.\n\t     */\n\t    getDeletedBranchInPath() {\n\t        return Array.from(this.branchesPaths.keys()).find((branch) => branch.isDeleted());\n\t    }\n\t    /**\n\t     * Smooth all paths by putting points on each row.\n\t     */\n\t    smoothBranchesPaths() {\n\t        const branchesPaths = new Map();\n\t        this.branchesPaths.forEach((points, branch) => {\n\t            if (points.length <= 1) {\n\t                branchesPaths.set(branch, [points]);\n\t                return;\n\t            }\n\t            // Cut path on each merge commits\n\t            // Coordinate[] -> Coordinate[][]\n\t            if (this.isGraphVertical) {\n\t                points = points.sort((a, b) => (a.y > b.y ? -1 : 1));\n\t            }\n\t            else {\n\t                points = points.sort((a, b) => (a.x > b.x ? 1 : -1));\n\t            }\n\t            if (this.isGraphReverse) {\n\t                points = points.reverse();\n\t            }\n\t            const paths = points.reduce((mem, point, i) => {\n\t                if (point.mergeCommit) {\n\t                    mem[mem.length - 1].push(utils.pick(point, [\"x\", \"y\"]));\n\t                    if (points[i - 1])\n\t                        mem.push([points[i - 1]]);\n\t                }\n\t                else {\n\t                    mem[mem.length - 1].push(point);\n\t                }\n\t                return mem;\n\t            }, [[]]);\n\t            if (this.isGraphReverse) {\n\t                paths.forEach((path) => path.reverse());\n\t            }\n\t            // Add intermediate points on each sub paths\n\t            if (this.isGraphVertical) {\n\t                paths.forEach((subPath) => {\n\t                    if (subPath.length <= 1)\n\t                        return;\n\t                    const firstPoint = subPath[0];\n\t                    const lastPoint = subPath[subPath.length - 1];\n\t                    const column = subPath[1].x;\n\t                    const branchSize = Math.round(Math.abs(firstPoint.y - lastPoint.y) / this.commitSpacing) - 1;\n\t                    const branchPoints = branchSize > 0\n\t                        ? new Array(branchSize).fill(0).map((_, i) => ({\n\t                            x: column,\n\t                            y: subPath[0].y - this.commitSpacing * (i + 1),\n\t                        }))\n\t                        : [];\n\t                    const lastSubPaths = branchesPaths.get(branch) || [];\n\t                    branchesPaths.set(branch, [\n\t                        ...lastSubPaths,\n\t                        [firstPoint, ...branchPoints, lastPoint],\n\t                    ]);\n\t                });\n\t            }\n\t            else {\n\t                paths.forEach((subPath) => {\n\t                    if (subPath.length <= 1)\n\t                        return;\n\t                    const firstPoint = subPath[0];\n\t                    const lastPoint = subPath[subPath.length - 1];\n\t                    const column = subPath[1].y;\n\t                    const branchSize = Math.round(Math.abs(firstPoint.x - lastPoint.x) / this.commitSpacing) - 1;\n\t                    const branchPoints = branchSize > 0\n\t                        ? new Array(branchSize).fill(0).map((_, i) => ({\n\t                            y: column,\n\t                            x: subPath[0].x + this.commitSpacing * (i + 1),\n\t                        }))\n\t                        : [];\n\t                    const lastSubPaths = branchesPaths.get(branch) || [];\n\t                    branchesPaths.set(branch, [\n\t                        ...lastSubPaths,\n\t                        [firstPoint, ...branchPoints, lastPoint],\n\t                    ]);\n\t                });\n\t            }\n\t        });\n\t        return branchesPaths;\n\t    }\n\t}\n\texports.BranchesPathsCalculator = BranchesPathsCalculator;\n\t/**\n\t * Return a string ready to use in `svg.path.d` from coordinates\n\t *\n\t * @param coordinates Collection of coordinates\n\t */\n\tfunction toSvgPath(coordinates, isBezier, isVertical) {\n\t    return coordinates\n\t        .map((path) => \"M\" +\n\t        path\n\t            .map(({ x, y }, i, points) => {\n\t            if (isBezier &&\n\t                points.length > 1 &&\n\t                (i === 1 || i === points.length - 1)) {\n\t                const previous = points[i - 1];\n\t                if (isVertical) {\n\t                    const middleY = (previous.y + y) / 2;\n\t                    return `C ${previous.x} ${middleY} ${x} ${middleY} ${x} ${y}`;\n\t                }\n\t                else {\n\t                    const middleX = (previous.x + x) / 2;\n\t                    return `C ${middleX} ${previous.y} ${middleX} ${y} ${x} ${y}`;\n\t                }\n\t            }\n\t            return `L ${x} ${y}`;\n\t        })\n\t            .join(\" \")\n\t            .slice(1))\n\t        .join(\" \");\n\t}\n\texports.toSvgPath = toSvgPath;\n\n\t});\n\n\tunwrapExports(branchesPaths);\n\tvar branchesPaths_1 = branchesPaths.BranchesPathsCalculator;\n\tvar branchesPaths_2 = branchesPaths.toSvgPath;\n\n\tvar gitgraphUserApi = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\tclass GitgraphUserApi {\n\t    // tslint:enable:variable-name\n\t    constructor(graph, onGraphUpdate) {\n\t        this._graph = graph;\n\t        this._onGraphUpdate = onGraphUpdate;\n\t    }\n\t    /**\n\t     * Clear everything (as `rm -rf .git && git init`).\n\t     */\n\t    clear() {\n\t        this._graph.refs = new refs.Refs();\n\t        this._graph.tags = new refs.Refs();\n\t        this._graph.commits = [];\n\t        this._graph.branches = new Map();\n\t        this._graph.currentBranch = this._graph.createBranch(\"master\");\n\t        this._onGraphUpdate();\n\t        return this;\n\t    }\n\t    commit(options) {\n\t        this._graph.currentBranch.getUserApi().commit(options);\n\t        return this;\n\t    }\n\t    branch(args) {\n\t        return this._graph.createBranch(args).getUserApi();\n\t    }\n\t    tag(...args) {\n\t        // Deal with shorter syntax\n\t        let name;\n\t        let ref;\n\t        let style;\n\t        let render;\n\t        if (typeof args[0] === \"string\") {\n\t            name = args[0];\n\t            ref = args[1];\n\t        }\n\t        else {\n\t            name = args[0].name;\n\t            ref = args[0].ref;\n\t            style = args[0].style;\n\t            render = args[0].render;\n\t        }\n\t        if (!ref) {\n\t            const head = this._graph.refs.getCommit(\"HEAD\");\n\t            if (!head)\n\t                return this;\n\t            ref = head;\n\t        }\n\t        let commitHash;\n\t        if (this._graph.refs.hasCommit(ref)) {\n\t            // `ref` is a `Commit[\"hash\"]`\n\t            commitHash = ref;\n\t        }\n\t        if (this._graph.refs.hasName(ref)) {\n\t            // `ref` is a `Branch[\"name\"]`\n\t            commitHash = this._graph.refs.getCommit(ref);\n\t        }\n\t        if (!commitHash) {\n\t            throw new Error(`The ref \"${ref}\" does not exist`);\n\t        }\n\t        this._graph.tags.set(name, commitHash);\n\t        this._graph.tagStyles[name] = style;\n\t        this._graph.tagRenders[name] = render;\n\t        this._onGraphUpdate();\n\t        return this;\n\t    }\n\t    /**\n\t     * Import a JSON.\n\t     *\n\t     * Data can't be typed since it comes from a JSON.\n\t     * We validate input format and throw early if something is invalid.\n\t     *\n\t     * @experimental\n\t     * @param data JSON from `git2json` output\n\t     */\n\t    import(data) {\n\t        const invalidData = new Error(\"Only `git2json` format is supported for imported data.\");\n\t        // We manually validate input data instead of using a lib like yup.\n\t        // => this is to keep bundlesize small.\n\t        if (!Array.isArray(data)) {\n\t            throw invalidData;\n\t        }\n\t        const areDataValid = data.every((options) => {\n\t            return (typeof options === \"object\" &&\n\t                typeof options.author === \"object\" &&\n\t                Array.isArray(options.refs));\n\t        });\n\t        if (!areDataValid) {\n\t            throw invalidData;\n\t        }\n\t        const commitOptionsList = data\n\t            .map((options) => (Object.assign({}, options, { style: Object.assign({}, this._graph.template.commit, { message: Object.assign({}, this._graph.template.commit.message, { display: this._graph.shouldDisplayCommitMessage }) }), author: `${options.author.name} <${options.author.email}>` })))\n\t            // Git2json outputs is reverse-chronological.\n\t            // We need to commit it chronological order.\n\t            .reverse();\n\t        // Use validated `value`.\n\t        this.clear();\n\t        this._graph.commits = commitOptionsList.map((options) => new commit.Commit(options));\n\t        // Create tags & refs.\n\t        commitOptionsList.forEach(({ refs, hash }) => {\n\t            if (!refs)\n\t                return;\n\t            if (!hash)\n\t                return;\n\t            const TAG_PREFIX = \"tag: \";\n\t            const tags = refs\n\t                .map((ref) => ref.split(TAG_PREFIX))\n\t                .map(([_, tag]) => tag)\n\t                .filter((tag) => typeof tag === \"string\");\n\t            tags.forEach((tag) => this._graph.tags.set(tag, hash));\n\t            refs\n\t                .filter((ref) => !ref.startsWith(TAG_PREFIX))\n\t                .forEach((ref) => this._graph.refs.set(ref, hash));\n\t        });\n\t        // Create branches.\n\t        const branches = this._getBranches();\n\t        this._graph.commits\n\t            .map((commit) => this._withBranches(branches, commit))\n\t            .reduce((mem, commit) => {\n\t            if (!commit.branches)\n\t                return mem;\n\t            commit.branches.forEach((branch) => mem.add(branch));\n\t            return mem;\n\t        }, new Set())\n\t            .forEach((branch) => this.branch(branch));\n\t        this._onGraphUpdate();\n\t        return this;\n\t    }\n\t    // tslint:disable:variable-name - Prefix `_` = explicitly private for JS users\n\t    // TODO: get rid of these duplicated private methods.\n\t    //\n\t    // These belong to Gitgraph. It is duplicated because of `import()`.\n\t    // `import()` should use regular user API instead.\n\t    _withBranches(branches, commit) {\n\t        let commitBranches = Array.from((branches.get(commit.hash) || new Set()).values());\n\t        if (commitBranches.length === 0) {\n\t            // No branch => branch has been deleted.\n\t            commitBranches = [branch.DELETED_BRANCH_NAME];\n\t        }\n\t        return commit.setBranches(commitBranches);\n\t    }\n\t    _getBranches() {\n\t        const result = new Map();\n\t        const queue = [];\n\t        const branches = this._graph.refs\n\t            .getAllNames()\n\t            .filter((name) => name !== \"HEAD\");\n\t        branches.forEach((branch) => {\n\t            const commitHash = this._graph.refs.getCommit(branch);\n\t            if (commitHash) {\n\t                queue.push(commitHash);\n\t            }\n\t            while (queue.length > 0) {\n\t                const currentHash = queue.pop();\n\t                const current = this._graph.commits.find(({ hash }) => hash === currentHash);\n\t                const prevBranches = result.get(currentHash) || new Set();\n\t                prevBranches.add(branch);\n\t                result.set(currentHash, prevBranches);\n\t                if (current.parents.length > 0) {\n\t                    queue.push(current.parents[0]);\n\t                }\n\t            }\n\t        });\n\t        return result;\n\t    }\n\t}\n\texports.GitgraphUserApi = GitgraphUserApi;\n\n\t});\n\n\tunwrapExports(gitgraphUserApi);\n\tvar gitgraphUserApi_1 = gitgraphUserApi.GitgraphUserApi;\n\n\tvar gitgraph = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\n\n\n\n\n\n\tclass GitgraphCore {\n\t    constructor(options = {}) {\n\t        this.refs = new refs.Refs();\n\t        this.tags = new refs.Refs();\n\t        this.tagStyles = {};\n\t        this.tagRenders = {};\n\t        this.commits = [];\n\t        this.branches = new Map();\n\t        this.listeners = [];\n\t        this.nextTimeoutId = null;\n\t        this.template = template.getTemplate(options.template);\n\t        // Set a default `master` branch\n\t        this.currentBranch = this.createBranch(\"master\");\n\t        // Set all options with default values\n\t        this.orientation = options.orientation;\n\t        this.reverseArrow = utils.booleanOptionOr(options.reverseArrow, false);\n\t        this.initCommitOffsetX = utils.numberOptionOr(options.initCommitOffsetX, 0);\n\t        this.initCommitOffsetY = utils.numberOptionOr(options.initCommitOffsetY, 0);\n\t        this.mode = options.mode;\n\t        this.author = options.author || \"Sergio Flores <saxo-guy@epic.com>\";\n\t        this.commitMessage =\n\t            options.commitMessage || \"He doesn't like George Michael! Boooo!\";\n\t        this.generateCommitHash =\n\t            typeof options.generateCommitHash === \"function\"\n\t                ? options.generateCommitHash\n\t                : () => undefined;\n\t        this.branchesOrderFunction =\n\t            typeof options.compareBranchesOrder === \"function\"\n\t                ? options.compareBranchesOrder\n\t                : undefined;\n\t        this.branchLabelOnEveryCommit = utils.booleanOptionOr(options.branchLabelOnEveryCommit, false);\n\t    }\n\t    get isHorizontal() {\n\t        return (this.orientation === orientation.Orientation.Horizontal ||\n\t            this.orientation === orientation.Orientation.HorizontalReverse);\n\t    }\n\t    get isVertical() {\n\t        return !this.isHorizontal;\n\t    }\n\t    get isReverse() {\n\t        return (this.orientation === orientation.Orientation.HorizontalReverse ||\n\t            this.orientation === orientation.Orientation.VerticalReverse);\n\t    }\n\t    get shouldDisplayCommitMessage() {\n\t        return !this.isHorizontal && this.mode !== mode.Mode.Compact;\n\t    }\n\t    /**\n\t     * Return the API to manipulate Gitgraph as a user.\n\t     * Rendering library should give that API to their consumer.\n\t     */\n\t    getUserApi() {\n\t        return new gitgraphUserApi.GitgraphUserApi(this, () => this.next());\n\t    }\n\t    /**\n\t     * Add a change listener.\n\t     * It will be called any time the graph have changed (commit, merge…).\n\t     *\n\t     * @param listener A callback to be invoked on every change.\n\t     * @returns A function to remove this change listener.\n\t     */\n\t    subscribe(listener) {\n\t        this.listeners.push(listener);\n\t        let isSubscribed = true;\n\t        return () => {\n\t            if (!isSubscribed)\n\t                return;\n\t            isSubscribed = false;\n\t            const index = this.listeners.indexOf(listener);\n\t            this.listeners.splice(index, 1);\n\t        };\n\t    }\n\t    /**\n\t     * Return all data required for rendering.\n\t     * Rendering libraries will use this to implement their rendering strategy.\n\t     */\n\t    getRenderedData() {\n\t        const commits = this.computeRenderedCommits();\n\t        const branchesPaths = this.computeRenderedBranchesPaths(commits);\n\t        const commitMessagesX = this.computeCommitMessagesX(branchesPaths);\n\t        this.computeBranchesColor(commits, branchesPaths);\n\t        return { commits, branchesPaths, commitMessagesX };\n\t    }\n\t    createBranch(args) {\n\t        const defaultParentBranchName = \"HEAD\";\n\t        let options = {\n\t            gitgraph: this,\n\t            name: \"\",\n\t            parentCommitHash: this.refs.getCommit(defaultParentBranchName),\n\t            style: this.template.branch,\n\t            onGraphUpdate: () => this.next(),\n\t        };\n\t        if (typeof args === \"string\") {\n\t            options.name = args;\n\t            options.parentCommitHash = this.refs.getCommit(defaultParentBranchName);\n\t        }\n\t        else {\n\t            const parentBranchName = args.from\n\t                ? args.from.name\n\t                : defaultParentBranchName;\n\t            const parentCommitHash = this.refs.getCommit(parentBranchName) ||\n\t                (this.refs.hasCommit(args.from) ? args.from : undefined);\n\t            args.style = args.style || {};\n\t            options = Object.assign({}, options, args, { parentCommitHash, style: Object.assign({}, options.style, args.style, { label: Object.assign({}, options.style.label, args.style.label) }) });\n\t        }\n\t        const branch$1 = new branch.Branch(options);\n\t        this.branches.set(branch$1.name, branch$1);\n\t        return branch$1;\n\t    }\n\t    /**\n\t     * Return commits with data for rendering.\n\t     */\n\t    computeRenderedCommits() {\n\t        const branches = this.getBranches();\n\t        const commitsWithBranches = this.commits.map((commit) => this.withBranches(branches, commit));\n\t        const rows = graphRows.createGraphRows(this.mode, this.commits);\n\t        const branchesOrder$1 = new branchesOrder.BranchesOrder(commitsWithBranches, this.template.colors, this.branchesOrderFunction);\n\t        return (commitsWithBranches\n\t            .map((commit) => commit.setRefs(this.refs))\n\t            .map((commit) => this.withPosition(rows, branchesOrder$1, commit))\n\t            // Fallback commit computed color on branch color.\n\t            .map((commit) => commit.withDefaultColor(this.getBranchDefaultColor(branchesOrder$1, commit.branchToDisplay)))\n\t            // Tags need commit style to be computed (with default color).\n\t            .map((commit) => commit.setTags(this.tags, (name) => Object.assign({}, this.tagStyles[name], this.template.tag), (name) => this.tagRenders[name])));\n\t    }\n\t    /**\n\t     * Return branches paths with all data required for rendering.\n\t     *\n\t     * @param commits List of commits with rendering data computed\n\t     */\n\t    computeRenderedBranchesPaths(commits) {\n\t        return new branchesPaths.BranchesPathsCalculator(commits, this.branches, this.template.commit.spacing, this.isVertical, this.isReverse, () => branch.createDeletedBranch(this, this.template.branch, () => this.next())).execute();\n\t    }\n\t    /**\n\t     * Set branches colors based on branches paths.\n\t     *\n\t     * @param commits List of graph commits\n\t     * @param branchesPaths Branches paths to be rendered\n\t     */\n\t    computeBranchesColor(commits, branchesPaths) {\n\t        const branchesOrder$1 = new branchesOrder.BranchesOrder(commits, this.template.colors, this.branchesOrderFunction);\n\t        Array.from(branchesPaths).forEach(([branch]) => {\n\t            branch.computedColor =\n\t                branch.style.color ||\n\t                    this.getBranchDefaultColor(branchesOrder$1, branch.name);\n\t        });\n\t    }\n\t    /**\n\t     * Return commit messages X position for rendering.\n\t     *\n\t     * @param branchesPaths Branches paths to be rendered\n\t     */\n\t    computeCommitMessagesX(branchesPaths) {\n\t        const numberOfColumns = Array.from(branchesPaths).length;\n\t        return numberOfColumns * this.template.branch.spacing;\n\t    }\n\t    /**\n\t     * Add `branches` property to commit.\n\t     *\n\t     * @param branches All branches mapped by commit hash\n\t     * @param commit Commit\n\t     */\n\t    withBranches(branches, commit) {\n\t        let commitBranches = Array.from((branches.get(commit.hash) || new Set()).values());\n\t        if (commitBranches.length === 0) {\n\t            // No branch => branch has been deleted.\n\t            commitBranches = [branch.DELETED_BRANCH_NAME];\n\t        }\n\t        return commit.setBranches(commitBranches);\n\t    }\n\t    /**\n\t     * Get all branches from current commits.\n\t     */\n\t    getBranches() {\n\t        const result = new Map();\n\t        const queue = [];\n\t        const branches = this.refs.getAllNames().filter((name) => name !== \"HEAD\");\n\t        branches.forEach((branch) => {\n\t            const commitHash = this.refs.getCommit(branch);\n\t            if (commitHash) {\n\t                queue.push(commitHash);\n\t            }\n\t            while (queue.length > 0) {\n\t                const currentHash = queue.pop();\n\t                const current = this.commits.find(({ hash }) => hash === currentHash);\n\t                const prevBranches = result.get(currentHash) || new Set();\n\t                prevBranches.add(branch);\n\t                result.set(currentHash, prevBranches);\n\t                if (current.parents.length > 0) {\n\t                    queue.push(current.parents[0]);\n\t                }\n\t            }\n\t        });\n\t        return result;\n\t    }\n\t    /**\n\t     * Add position to given commit.\n\t     *\n\t     * @param rows Graph rows\n\t     * @param branchesOrder Computed order of branches\n\t     * @param commit Commit to position\n\t     */\n\t    withPosition(rows, branchesOrder, commit) {\n\t        const row = rows.getRowOf(commit.hash);\n\t        const maxRow = rows.getMaxRow();\n\t        const order = branchesOrder.get(commit.branchToDisplay);\n\t        switch (this.orientation) {\n\t            default:\n\t                return commit.setPosition({\n\t                    x: this.initCommitOffsetX + this.template.branch.spacing * order,\n\t                    y: this.initCommitOffsetY +\n\t                        this.template.commit.spacing * (maxRow - row),\n\t                });\n\t            case orientation.Orientation.VerticalReverse:\n\t                return commit.setPosition({\n\t                    x: this.initCommitOffsetX + this.template.branch.spacing * order,\n\t                    y: this.initCommitOffsetY + this.template.commit.spacing * row,\n\t                });\n\t            case orientation.Orientation.Horizontal:\n\t                return commit.setPosition({\n\t                    x: this.initCommitOffsetX + this.template.commit.spacing * row,\n\t                    y: this.initCommitOffsetY + this.template.branch.spacing * order,\n\t                });\n\t            case orientation.Orientation.HorizontalReverse:\n\t                return commit.setPosition({\n\t                    x: this.initCommitOffsetX +\n\t                        this.template.commit.spacing * (maxRow - row),\n\t                    y: this.initCommitOffsetY + this.template.branch.spacing * order,\n\t                });\n\t        }\n\t    }\n\t    /**\n\t     * Return the default color for given branch.\n\t     *\n\t     * @param branchesOrder Computed order of branches\n\t     * @param branchName Name of the branch\n\t     */\n\t    getBranchDefaultColor(branchesOrder, branchName) {\n\t        return branchesOrder.getColorOf(branchName);\n\t    }\n\t    /**\n\t     * Tell each listener something new happened.\n\t     * E.g. a rendering library will know it needs to re-render the graph.\n\t     */\n\t    next() {\n\t        if (this.nextTimeoutId) {\n\t            window.clearTimeout(this.nextTimeoutId);\n\t        }\n\t        // Use setTimeout() with `0` to debounce call to next tick.\n\t        this.nextTimeoutId = window.setTimeout(() => {\n\t            this.listeners.forEach((listener) => listener(this.getRenderedData()));\n\t        }, 0);\n\t    }\n\t}\n\texports.GitgraphCore = GitgraphCore;\n\n\t});\n\n\tunwrapExports(gitgraph);\n\tvar gitgraph_1 = gitgraph.GitgraphCore;\n\n\tvar lib = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\texports.GitgraphCore = gitgraph.GitgraphCore;\n\n\texports.Mode = mode.Mode;\n\n\texports.GitgraphUserApi = gitgraphUserApi.GitgraphUserApi;\n\n\texports.BranchUserApi = branchUserApi.BranchUserApi;\n\n\texports.Branch = branch.Branch;\n\n\texports.Commit = commit.Commit;\n\n\texports.Tag = tag.Tag;\n\n\texports.Refs = refs.Refs;\n\n\texports.MergeStyle = template.MergeStyle;\n\texports.TemplateName = template.TemplateName;\n\texports.templateExtend = template.templateExtend;\n\n\texports.Orientation = orientation.Orientation;\n\n\texports.toSvgPath = branchesPaths.toSvgPath;\n\n\texports.arrowSvgPath = utils.arrowSvgPath;\n\n\t});\n\n\tunwrapExports(lib);\n\tvar lib_1 = lib.GitgraphCore;\n\tvar lib_2 = lib.Mode;\n\tvar lib_3 = lib.GitgraphUserApi;\n\tvar lib_4 = lib.BranchUserApi;\n\tvar lib_5 = lib.Branch;\n\tvar lib_6 = lib.Commit;\n\tvar lib_7 = lib.Tag;\n\tvar lib_8 = lib.Refs;\n\tvar lib_9 = lib.MergeStyle;\n\tvar lib_10 = lib.TemplateName;\n\tvar lib_11 = lib.templateExtend;\n\tvar lib_12 = lib.Orientation;\n\tvar lib_13 = lib.toSvgPath;\n\tvar lib_14 = lib.arrowSvgPath;\n\n\tvar SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n\tfunction createSvg(options) {\n\t    var svg = document.createElementNS(SVG_NAMESPACE, \"svg\");\n\t    if (!options)\n\t        return svg;\n\t    if (options.children) {\n\t        options.children.forEach(function (child) { return svg.appendChild(child); });\n\t    }\n\t    if (options.viewBox) {\n\t        svg.setAttribute(\"viewBox\", options.viewBox);\n\t    }\n\t    if (options.height) {\n\t        svg.setAttribute(\"height\", options.height.toString());\n\t    }\n\t    if (options.width) {\n\t        svg.setAttribute(\"width\", options.width.toString());\n\t    }\n\t    return svg;\n\t}\n\tfunction createG(options) {\n\t    var g = document.createElementNS(SVG_NAMESPACE, \"g\");\n\t    options.children.forEach(function (child) { return child && g.appendChild(child); });\n\t    if (options.translate) {\n\t        g.setAttribute(\"transform\", \"translate(\" + options.translate.x + \", \" + options.translate.y + \")\");\n\t    }\n\t    if (options.fill) {\n\t        g.setAttribute(\"fill\", options.fill);\n\t    }\n\t    if (options.stroke) {\n\t        g.setAttribute(\"stroke\", options.stroke);\n\t    }\n\t    if (options.strokeWidth) {\n\t        g.setAttribute(\"stroke-width\", options.strokeWidth.toString());\n\t    }\n\t    if (options.onClick) {\n\t        g.addEventListener(\"click\", options.onClick);\n\t    }\n\t    if (options.onMouseOver) {\n\t        g.addEventListener(\"mouseover\", options.onMouseOver);\n\t    }\n\t    if (options.onMouseOut) {\n\t        g.addEventListener(\"mouseout\", options.onMouseOut);\n\t    }\n\t    return g;\n\t}\n\tfunction createText(options) {\n\t    var text = document.createElementNS(SVG_NAMESPACE, \"text\");\n\t    text.setAttribute(\"alignment-baseline\", \"central\");\n\t    text.setAttribute(\"dominant-baseline\", \"central\");\n\t    text.textContent = options.content;\n\t    if (options.fill) {\n\t        text.setAttribute(\"fill\", options.fill);\n\t    }\n\t    if (options.font) {\n\t        text.setAttribute(\"style\", \"font: \" + options.font);\n\t    }\n\t    if (options.anchor) {\n\t        text.setAttribute(\"text-anchor\", options.anchor);\n\t    }\n\t    if (options.translate) {\n\t        text.setAttribute(\"x\", options.translate.x.toString());\n\t        text.setAttribute(\"y\", options.translate.y.toString());\n\t    }\n\t    if (options.onClick) {\n\t        text.addEventListener(\"click\", options.onClick);\n\t    }\n\t    return text;\n\t}\n\tfunction createCircle(options) {\n\t    var circle = document.createElementNS(SVG_NAMESPACE, \"circle\");\n\t    circle.setAttribute(\"cx\", options.radius.toString());\n\t    circle.setAttribute(\"cy\", options.radius.toString());\n\t    circle.setAttribute(\"r\", options.radius.toString());\n\t    if (options.id) {\n\t        circle.setAttribute(\"id\", options.id);\n\t    }\n\t    if (options.fill) {\n\t        circle.setAttribute(\"fill\", options.fill);\n\t    }\n\t    return circle;\n\t}\n\tfunction createRect(options) {\n\t    var rect = document.createElementNS(SVG_NAMESPACE, \"rect\");\n\t    rect.setAttribute(\"width\", options.width.toString());\n\t    rect.setAttribute(\"height\", options.height.toString());\n\t    if (options.borderRadius) {\n\t        rect.setAttribute(\"rx\", options.borderRadius.toString());\n\t    }\n\t    if (options.fill) {\n\t        rect.setAttribute(\"fill\", options.fill || \"transparent\");\n\t    }\n\t    if (options.stroke) {\n\t        rect.setAttribute(\"stroke\", options.stroke);\n\t    }\n\t    return rect;\n\t}\n\tfunction createPath(options) {\n\t    var path = document.createElementNS(SVG_NAMESPACE, \"path\");\n\t    path.setAttribute(\"d\", options.d);\n\t    if (options.fill) {\n\t        path.setAttribute(\"fill\", options.fill);\n\t    }\n\t    if (options.stroke) {\n\t        path.setAttribute(\"stroke\", options.stroke);\n\t    }\n\t    if (options.strokeWidth) {\n\t        path.setAttribute(\"stroke-width\", options.strokeWidth.toString());\n\t    }\n\t    if (options.translate) {\n\t        path.setAttribute(\"transform\", \"translate(\" + options.translate.x + \", \" + options.translate.y + \")\");\n\t    }\n\t    return path;\n\t}\n\tfunction createUse(href) {\n\t    var use = document.createElementNS(SVG_NAMESPACE, \"use\");\n\t    use.setAttribute(\"href\", \"#\" + href);\n\t    // xlink:href is deprecated in SVG2, but we keep it for retro-compatibility\n\t    // => https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use#Browser_compatibility\n\t    use.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", \"#\" + href);\n\t    return use;\n\t}\n\tfunction createClipPath() {\n\t    return document.createElementNS(SVG_NAMESPACE, \"clipPath\");\n\t}\n\tfunction createDefs(children) {\n\t    var defs = document.createElementNS(SVG_NAMESPACE, \"defs\");\n\t    children.forEach(function (child) { return defs.appendChild(child); });\n\t    return defs;\n\t}\n\tfunction createForeignObject(options) {\n\t    var result = document.createElementNS(SVG_NAMESPACE, \"foreignObject\");\n\t    result.setAttribute(\"width\", options.width.toString());\n\t    if (options.translate) {\n\t        result.setAttribute(\"x\", options.translate.x.toString());\n\t        result.setAttribute(\"y\", options.translate.y.toString());\n\t    }\n\t    var p = document.createElement(\"p\");\n\t    p.textContent = options.content;\n\t    result.appendChild(p);\n\t    return result;\n\t}\n\n\tvar PADDING_X = 10;\n\tvar PADDING_Y = 5;\n\tfunction createBranchLabel(branch, commit) {\n\t    var rect = createRect({\n\t        width: 0,\n\t        height: 0,\n\t        borderRadius: branch.style.label.borderRadius,\n\t        stroke: branch.style.label.strokeColor || commit.style.color,\n\t        fill: branch.style.label.bgColor,\n\t    });\n\t    var text = createText({\n\t        content: branch.name,\n\t        translate: {\n\t            x: PADDING_X,\n\t            y: 0,\n\t        },\n\t        font: branch.style.label.font,\n\t        fill: branch.style.label.color || commit.style.color,\n\t    });\n\t    var branchLabel = createG({ children: [rect] });\n\t    var observer = new MutationObserver(function () {\n\t        var _a = text.getBBox(), height = _a.height, width = _a.width;\n\t        var boxWidth = width + 2 * PADDING_X;\n\t        var boxHeight = height + 2 * PADDING_Y;\n\t        // Ideally, it would be great to refactor these behavior into SVG elements.\n\t        rect.setAttribute(\"width\", boxWidth.toString());\n\t        rect.setAttribute(\"height\", boxHeight.toString());\n\t        text.setAttribute(\"y\", (boxHeight / 2).toString());\n\t    });\n\t    observer.observe(branchLabel, {\n\t        attributes: false,\n\t        subtree: false,\n\t        childList: true,\n\t    });\n\t    // Add text after observer is set up => react based on text size.\n\t    // We might refactor it by including `onChildrenUpdate()` to `createG()`.\n\t    branchLabel.appendChild(text);\n\t    return branchLabel;\n\t}\n\n\tvar PADDING_X$1 = 10;\n\tvar PADDING_Y$1 = 5;\n\tfunction createTag(tag) {\n\t    var path = createPath({\n\t        d: \"\",\n\t        fill: tag.style.bgColor,\n\t        stroke: tag.style.strokeColor,\n\t    });\n\t    var text = createText({\n\t        content: tag.name,\n\t        fill: tag.style.color,\n\t        font: tag.style.font,\n\t        translate: { x: 0, y: 0 },\n\t    });\n\t    var result = createG({ children: [path] });\n\t    var offset = tag.style.pointerWidth;\n\t    var observer = new MutationObserver(function () {\n\t        var _a = text.getBBox(), height = _a.height, width = _a.width;\n\t        if (height === 0 || width === 0)\n\t            return;\n\t        var radius = tag.style.borderRadius;\n\t        var boxWidth = offset + width + 2 * PADDING_X$1;\n\t        var boxHeight = height + 2 * PADDING_Y$1;\n\t        var pathD = [\n\t            \"M 0,0\",\n\t            \"L \" + offset + \",\" + boxHeight / 2,\n\t            \"V \" + boxHeight / 2,\n\t            \"Q \" + offset + \",\" + boxHeight / 2 + \" \" + (offset + radius) + \",\" + boxHeight / 2,\n\t            \"H \" + (boxWidth - radius),\n\t            \"Q \" + boxWidth + \",\" + boxHeight / 2 + \" \" + boxWidth + \",\" + (boxHeight / 2 - radius),\n\t            \"V -\" + (boxHeight / 2 - radius),\n\t            \"Q \" + boxWidth + \",-\" + boxHeight / 2 + \" \" + (boxWidth - radius) + \",-\" + boxHeight / 2,\n\t            \"H \" + (offset + radius),\n\t            \"Q \" + offset + \",-\" + boxHeight / 2 + \" \" + offset + \",-\" + boxHeight / 2,\n\t            \"V -\" + boxHeight / 2,\n\t            \"z\",\n\t        ].join(\" \");\n\t        // Ideally, it would be great to refactor these behavior into SVG elements.\n\t        path.setAttribute(\"d\", pathD.toString());\n\t        text.setAttribute(\"x\", (offset + PADDING_X$1).toString());\n\t    });\n\t    observer.observe(result, {\n\t        attributes: false,\n\t        subtree: false,\n\t        childList: true,\n\t    });\n\t    // Add text after observer is set up => react based on text size.\n\t    // We might refactor it by including `onChildrenUpdate()` to `createG()`.\n\t    result.appendChild(text);\n\t    return result;\n\t}\n\n\tvar PADDING = 10;\n\tvar OFFSET = 10;\n\tfunction createTooltip(commit) {\n\t    var path = createPath({ d: \"\", fill: \"#EEE\" });\n\t    var text = createText({\n\t        translate: { x: OFFSET + PADDING, y: 0 },\n\t        content: commit.hashAbbrev + \" - \" + commit.subject,\n\t        fill: \"#333\",\n\t    });\n\t    var commitSize = commit.style.dot.size * 2;\n\t    var tooltip = createG({\n\t        translate: { x: commitSize, y: commitSize / 2 },\n\t        children: [path],\n\t    });\n\t    var observer = new MutationObserver(function () {\n\t        var width = text.getBBox().width;\n\t        var radius = 5;\n\t        var boxHeight = 50;\n\t        var boxWidth = OFFSET + width + 2 * PADDING;\n\t        var pathD = [\n\t            \"M 0,0\",\n\t            \"L \" + OFFSET + \",\" + OFFSET,\n\t            \"V \" + (boxHeight / 2 - radius),\n\t            \"Q \" + OFFSET + \",\" + boxHeight / 2 + \" \" + (OFFSET + radius) + \",\" + boxHeight / 2,\n\t            \"H \" + (boxWidth - radius),\n\t            \"Q \" + boxWidth + \",\" + boxHeight / 2 + \" \" + boxWidth + \",\" + (boxHeight / 2 - radius),\n\t            \"V -\" + (boxHeight / 2 - radius),\n\t            \"Q \" + boxWidth + \",-\" + boxHeight / 2 + \" \" + (boxWidth - radius) + \",-\" + boxHeight / 2,\n\t            \"H \" + (OFFSET + radius),\n\t            \"Q \" + OFFSET + \",-\" + boxHeight / 2 + \" \" + OFFSET + \",-\" + (boxHeight / 2 - radius),\n\t            \"V -\" + OFFSET,\n\t            \"z\",\n\t        ].join(\" \");\n\t        // Ideally, it would be great to refactor these behavior into SVG elements.\n\t        // rect.setAttribute(\"width\", boxWidth.toString());\n\t        path.setAttribute(\"d\", pathD.toString());\n\t    });\n\t    observer.observe(tooltip, {\n\t        attributes: false,\n\t        subtree: false,\n\t        childList: true,\n\t    });\n\t    tooltip.appendChild(text);\n\t    return tooltip;\n\t}\n\n\tfunction createGitgraph(graphContainer, options) {\n\t    var commitsElements = {};\n\t    // Store a map to replace commits y with the correct value,\n\t    // including the message offset. Allows custom, flexible message height.\n\t    // E.g. {20: 30} means for commit: y=20 -> y=30\n\t    // Offset should be computed when graph is rendered (componentDidUpdate).\n\t    var commitYWithOffsets = {};\n\t    var shouldRecomputeOffsets = false;\n\t    var lastData;\n\t    var $commits;\n\t    var commitMessagesX = 0;\n\t    var $tooltip = null;\n\t    // Create an `svg` context in which we'll render the graph.\n\t    var svg = createSvg();\n\t    adaptSvgOnUpdate();\n\t    graphContainer.appendChild(svg);\n\t    // React on gitgraph updates to re-render the graph.\n\t    var gitgraph = new lib_1(options);\n\t    gitgraph.subscribe(function (data) {\n\t        shouldRecomputeOffsets = true;\n\t        render(data);\n\t    });\n\t    // Return usable API for end-user.\n\t    return gitgraph.getUserApi();\n\t    function render(data) {\n\t        // Reset before new rendering to flush previous state.\n\t        commitsElements = {};\n\t        var commits = data.commits, branchesPaths = data.branchesPaths;\n\t        commitMessagesX = data.commitMessagesX;\n\t        // Store data so we can re-render after offsets are computed.\n\t        lastData = data;\n\t        // Store $commits so we can compute offsets from actual height.\n\t        $commits = renderCommits(commits);\n\t        // Reset SVG with new content.\n\t        svg.innerHTML = \"\";\n\t        svg.appendChild(createG({\n\t            // Translate graph left => left-most branch label is not cropped (horizontal)\n\t            // Translate graph down => top-most commit tooltip is not cropped\n\t            translate: { x: PADDING_X, y: PADDING },\n\t            children: [renderBranchesPaths(branchesPaths), $commits],\n\t        }));\n\t    }\n\t    function adaptSvgOnUpdate() {\n\t        var observer = new MutationObserver(function () {\n\t            if (shouldRecomputeOffsets) {\n\t                shouldRecomputeOffsets = false;\n\t                computeOffsets();\n\t                render(lastData);\n\t            }\n\t            else {\n\t                positionCommitsElements();\n\t                adaptGraphDimensions();\n\t            }\n\t        });\n\t        observer.observe(svg, {\n\t            attributes: false,\n\t            // Listen to subtree changes to react when we append the tooltip.\n\t            subtree: true,\n\t            childList: true,\n\t        });\n\t        function computeOffsets() {\n\t            var commits = Array.from($commits.children);\n\t            var totalOffsetY = 0;\n\t            // In VerticalReverse orientation, commits are in the same order in the DOM.\n\t            var orientedCommits = gitgraph.orientation === lib_12.VerticalReverse\n\t                ? commits\n\t                : commits.reverse();\n\t            commitYWithOffsets = orientedCommits.reduce(function (newOffsets, commit) {\n\t                var commitY = parseInt(commit\n\t                    .getAttribute(\"transform\")\n\t                    .split(\",\")[1]\n\t                    .slice(0, -1), 10);\n\t                var firstForeignObject = commit.getElementsByTagName(\"foreignObject\")[0];\n\t                var customHtmlMessage = firstForeignObject && firstForeignObject.firstElementChild;\n\t                newOffsets[commitY] = commitY + totalOffsetY;\n\t                // Increment total offset after setting the offset\n\t                // => offset next commits accordingly.\n\t                totalOffsetY += getMessageHeight(customHtmlMessage);\n\t                return newOffsets;\n\t            }, {});\n\t        }\n\t        function positionCommitsElements() {\n\t            if (gitgraph.isHorizontal) {\n\t                // Elements don't appear on horizontal mode, yet.\n\t                return;\n\t            }\n\t            var padding = 10;\n\t            // Ensure commits elements (branch labels, message…) are well positionned.\n\t            // It can't be done at render time since elements size is dynamic.\n\t            Object.keys(commitsElements).forEach(function (commitHash) {\n\t                var _a = commitsElements[commitHash], branchLabel = _a.branchLabel, tags = _a.tags, message = _a.message;\n\t                // We'll store X position progressively and translate elements.\n\t                var x = commitMessagesX;\n\t                if (branchLabel) {\n\t                    moveElement(branchLabel, x);\n\t                    // BBox width misses box padding\n\t                    // => they are set later, on branch label update.\n\t                    // We would need to make branch label update happen before to solve it.\n\t                    var branchLabelWidth = branchLabel.getBBox().width + 2 * PADDING_X;\n\t                    x += branchLabelWidth + padding;\n\t                }\n\t                tags.forEach(function (tag) {\n\t                    moveElement(tag, x);\n\t                    // BBox width misses box padding and offset\n\t                    // => they are set later, on tag update.\n\t                    // We would need to make tag update happen before to solve it.\n\t                    var offset = parseFloat(tag.getAttribute(\"data-offset\") || \"0\");\n\t                    var tagWidth = tag.getBBox().width + 2 * PADDING_X$1 + offset;\n\t                    x += tagWidth + padding;\n\t                });\n\t                if (message) {\n\t                    moveElement(message, x);\n\t                }\n\t            });\n\t        }\n\t        function adaptGraphDimensions() {\n\t            var _a = svg.getBBox(), height = _a.height, width = _a.width;\n\t            // FIXME: In horizontal mode, we mimic @gitgraph/react behavior\n\t            // => it gets re-rendered after offsets are computed\n\t            // => it applies paddings twice!\n\t            //\n\t            // It works… by chance. Technically, we should compute what would\n\t            // *actually* go beyond the computed limits of the graph.\n\t            var horizontalCustomOffset = 50;\n\t            var widthOffset = gitgraph.isHorizontal\n\t                ? horizontalCustomOffset\n\t                : // Add `TOOLTIP_PADDING` so we don't crop the tooltip text.\n\t                    // Add `BRANCH_LABEL_PADDING_X` so we don't cut branch label.\n\t                    PADDING_X + PADDING;\n\t            var heightOffset = gitgraph.isHorizontal\n\t                ? horizontalCustomOffset\n\t                : // Add `TOOLTIP_PADDING` so we don't crop tooltip text\n\t                    // Add `BRANCH_LABEL_PADDING_Y` so we don't crop branch label.\n\t                    PADDING_Y + PADDING;\n\t            svg.setAttribute(\"width\", (width + widthOffset).toString());\n\t            svg.setAttribute(\"height\", (height + heightOffset).toString());\n\t        }\n\t    }\n\t    function moveElement(target, x) {\n\t        var transform = target.getAttribute(\"transform\") || \"translate(0, 0)\";\n\t        target.setAttribute(\"transform\", transform.replace(/translate\\(([\\d\\.]+),/, \"translate(\" + x + \",\"));\n\t    }\n\t    function renderBranchesPaths(branchesPaths) {\n\t        var offset = gitgraph.template.commit.dot.size;\n\t        var isBezier = gitgraph.template.branch.mergeStyle === lib_9.Bezier;\n\t        var paths = Array.from(branchesPaths).map(function (_a) {\n\t            var branch = _a[0], coordinates = _a[1];\n\t            return createPath({\n\t                d: lib_13(coordinates.map(function (coordinate) { return coordinate.map(getWithCommitOffset); }), isBezier, gitgraph.isVertical),\n\t                fill: \"transparent\",\n\t                stroke: branch.computedColor || \"\",\n\t                strokeWidth: branch.style.lineWidth,\n\t                translate: {\n\t                    x: offset,\n\t                    y: offset,\n\t                },\n\t            });\n\t        });\n\t        return createG({ children: paths });\n\t    }\n\t    function renderCommits(commits) {\n\t        return createG({ children: commits.map(renderCommit) });\n\t        function renderCommit(commit) {\n\t            var _a = getWithCommitOffset(commit), x = _a.x, y = _a.y;\n\t            return createG({\n\t                translate: { x: x, y: y },\n\t                children: [\n\t                    renderDot(commit)\n\t                ].concat(renderArrows(commit), [\n\t                    createG({\n\t                        translate: { x: -x, y: 0 },\n\t                        children: [\n\t                            renderMessage(commit)\n\t                        ].concat(renderBranchLabels(commit), renderTags(commit)),\n\t                    }),\n\t                ]),\n\t            });\n\t        }\n\t        function renderArrows(commit) {\n\t            if (!gitgraph.template.arrow.size) {\n\t                return [null];\n\t            }\n\t            var commitRadius = commit.style.dot.size;\n\t            return commit.parents.map(function (parentHash) {\n\t                var parent = commits.find(function (_a) {\n\t                    var hash = _a.hash;\n\t                    return hash === parentHash;\n\t                });\n\t                if (!parent)\n\t                    return null;\n\t                // Starting point, relative to commit\n\t                var origin = gitgraph.reverseArrow\n\t                    ? {\n\t                        x: commitRadius + (parent.x - commit.x),\n\t                        y: commitRadius + (parent.y - commit.y),\n\t                    }\n\t                    : { x: commitRadius, y: commitRadius };\n\t                var path = createPath({\n\t                    d: lib_14(gitgraph, parent, commit),\n\t                    fill: gitgraph.template.arrow.color || \"\",\n\t                });\n\t                return createG({ translate: origin, children: [path] });\n\t            });\n\t        }\n\t    }\n\t    function renderMessage(commit) {\n\t        if (!commit.style.message.display) {\n\t            return null;\n\t        }\n\t        var message;\n\t        if (commit.renderMessage) {\n\t            message = createG({ children: [] });\n\t            // Add message after observer is set up => react based on body height.\n\t            // We might refactor it by including `onChildrenUpdate()` to `createG()`.\n\t            adaptMessageBodyHeight(message);\n\t            message.appendChild(commit.renderMessage(commit));\n\t            setMessageRef(commit, message);\n\t            return message;\n\t        }\n\t        var text = createText({\n\t            content: commit.message,\n\t            fill: commit.style.message.color || \"\",\n\t            font: commit.style.message.font,\n\t            onClick: commit.onMessageClick,\n\t        });\n\t        message = createG({\n\t            translate: { x: 0, y: commit.style.dot.size },\n\t            children: [text],\n\t        });\n\t        if (commit.body) {\n\t            var body = createForeignObject({\n\t                width: 600,\n\t                translate: { x: 10, y: 0 },\n\t                content: commit.body,\n\t            });\n\t            // Add message after observer is set up => react based on body height.\n\t            // We might refactor it by including `onChildrenUpdate()` to `createG()`.\n\t            adaptMessageBodyHeight(message);\n\t            message.appendChild(body);\n\t        }\n\t        setMessageRef(commit, message);\n\t        return message;\n\t    }\n\t    function adaptMessageBodyHeight(message) {\n\t        var observer = new MutationObserver(function (mutations) {\n\t            mutations.forEach(function (_a) {\n\t                var target = _a.target;\n\t                return setChildrenForeignObjectHeight(target);\n\t            });\n\t        });\n\t        observer.observe(message, {\n\t            attributes: false,\n\t            subtree: false,\n\t            childList: true,\n\t        });\n\t        function setChildrenForeignObjectHeight(node) {\n\t            if (node.nodeName === \"foreignObject\") {\n\t                // We have to access the first child's parentElement to retrieve\n\t                // the Element instead of the Node => we can compute dimensions.\n\t                var foreignObject = node.firstChild && node.firstChild.parentElement;\n\t                if (!foreignObject)\n\t                    return;\n\t                // Force the height of the foreignObject (browser issue)\n\t                foreignObject.setAttribute(\"height\", getMessageHeight(foreignObject.firstElementChild).toString());\n\t            }\n\t            node.childNodes.forEach(setChildrenForeignObjectHeight);\n\t        }\n\t    }\n\t    function renderBranchLabels(commit) {\n\t        // @gitgraph/core could compute branch labels into commits directly.\n\t        // That will make it easier to retrieve them, just like tags.\n\t        var branches = Array.from(gitgraph.branches.values());\n\t        return branches.map(function (branch) {\n\t            if (!branch.style.label.display)\n\t                return null;\n\t            if (!gitgraph.branchLabelOnEveryCommit) {\n\t                var commitHash = gitgraph.refs.getCommit(branch.name);\n\t                if (commit.hash !== commitHash)\n\t                    return null;\n\t            }\n\t            // For the moment, we don't handle multiple branch labels.\n\t            // To do so, we'd need to reposition each of them appropriately.\n\t            if (commit.branchToDisplay !== branch.name)\n\t                return null;\n\t            var branchLabel = branch.renderLabel\n\t                ? branch.renderLabel(branch)\n\t                : createBranchLabel(branch, commit);\n\t            var branchLabelContainer;\n\t            if (gitgraph.isVertical) {\n\t                branchLabelContainer = createG({\n\t                    children: [branchLabel],\n\t                });\n\t            }\n\t            else {\n\t                var commitDotSize = commit.style.dot.size * 2;\n\t                var horizontalMarginTop = 10;\n\t                branchLabelContainer = createG({\n\t                    translate: { x: commit.x, y: commitDotSize + horizontalMarginTop },\n\t                    children: [branchLabel],\n\t                });\n\t            }\n\t            setBranchLabelRef(commit, branchLabelContainer);\n\t            return branchLabelContainer;\n\t        });\n\t    }\n\t    function renderTags(commit) {\n\t        if (!commit.tags)\n\t            return [];\n\t        if (gitgraph.isHorizontal)\n\t            return [];\n\t        return commit.tags.map(function (tag) {\n\t            var tagElement = tag.render\n\t                ? tag.render(tag.name, tag.style)\n\t                : createTag(tag);\n\t            var tagContainer = createG({\n\t                translate: { x: 0, y: commit.style.dot.size },\n\t                children: [tagElement],\n\t            });\n\t            // `data-offset` is used to position tag element in `positionCommitsElements`.\n\t            // => because when it's executed, tag offsets are not resolved yet\n\t            tagContainer.setAttribute(\"data-offset\", tag.style.pointerWidth.toString());\n\t            setTagRef(commit, tagContainer);\n\t            return tagContainer;\n\t        });\n\t    }\n\t    function renderDot(commit) {\n\t        if (commit.renderDot) {\n\t            return commit.renderDot(commit);\n\t        }\n\t        /*\n\t        In order to handle strokes, we need to do some complex stuff here… 😅\n\t    \n\t        Problem: strokes are drawn inside & outside the circle.\n\t        But we want the stroke to be drawn inside only!\n\t    \n\t        The outside overlaps with other elements, as we expect the dot to have a fixed size. So we want to crop the outside part.\n\t    \n\t        Solution:\n\t        1. Create the circle in a <defs>\n\t        2. Define a clip path that references the circle\n\t        3. Use the clip path, adding the stroke.\n\t        4. Double stroke width as half of it will be clipped (the outside part).\n\t    \n\t        Ref.: https://stackoverflow.com/a/32162431/3911841\n\t    \n\t        P.S. there is a proposal for a stroke-alignment property,\n\t        but it's still a W3C Draft ¯\\_(ツ)_/¯\n\t        https://svgwg.org/specs/strokes/#SpecifyingStrokeAlignment\n\t      */\n\t        var circleId = commit.hash;\n\t        var circle = createCircle({\n\t            id: circleId,\n\t            radius: commit.style.dot.size,\n\t            fill: commit.style.dot.color || \"\",\n\t        });\n\t        var clipPathId = \"clip-\" + commit.hash;\n\t        var circleClipPath = createClipPath();\n\t        circleClipPath.setAttribute(\"id\", clipPathId);\n\t        circleClipPath.appendChild(createUse(circleId));\n\t        var useCirclePath = createUse(circleId);\n\t        useCirclePath.setAttribute(\"clip-path\", \"url(#\" + clipPathId + \")\");\n\t        useCirclePath.setAttribute(\"stroke\", commit.style.dot.strokeColor || \"\");\n\t        var strokeWidth = commit.style.dot.strokeWidth\n\t            ? commit.style.dot.strokeWidth * 2\n\t            : 0;\n\t        useCirclePath.setAttribute(\"stroke-width\", strokeWidth.toString());\n\t        var dotText = commit.dotText\n\t            ? createText({\n\t                content: commit.dotText,\n\t                font: commit.style.dot.font,\n\t                anchor: \"middle\",\n\t                translate: { x: commit.style.dot.size, y: commit.style.dot.size },\n\t            })\n\t            : null;\n\t        return createG({\n\t            onClick: commit.onClick,\n\t            onMouseOver: function () {\n\t                appendTooltipToGraph(commit);\n\t                commit.onMouseOver();\n\t            },\n\t            onMouseOut: function () {\n\t                if ($tooltip)\n\t                    $tooltip.remove();\n\t                commit.onMouseOut();\n\t            },\n\t            children: [createDefs([circle, circleClipPath]), useCirclePath, dotText],\n\t        });\n\t    }\n\t    function appendTooltipToGraph(commit) {\n\t        if (!svg.firstChild)\n\t            return;\n\t        if (gitgraph.isVertical && gitgraph.mode !== lib_2.Compact)\n\t            return;\n\t        if (gitgraph.isVertical && !commit.style.hasTooltipInCompactMode)\n\t            return;\n\t        var tooltip = commit.renderTooltip\n\t            ? commit.renderTooltip(commit)\n\t            : createTooltip(commit);\n\t        $tooltip = createG({\n\t            translate: getWithCommitOffset(commit),\n\t            children: [tooltip],\n\t        });\n\t        svg.firstChild.appendChild($tooltip);\n\t    }\n\t    function getWithCommitOffset(_a) {\n\t        var x = _a.x, y = _a.y;\n\t        return { x: x, y: commitYWithOffsets[y] || y };\n\t    }\n\t    function setBranchLabelRef(commit, branchLabels) {\n\t        if (!commitsElements[commit.hashAbbrev]) {\n\t            initCommitElements(commit);\n\t        }\n\t        commitsElements[commit.hashAbbrev].branchLabel = branchLabels;\n\t    }\n\t    function setMessageRef(commit, message) {\n\t        if (!commitsElements[commit.hashAbbrev]) {\n\t            initCommitElements(commit);\n\t        }\n\t        commitsElements[commit.hashAbbrev].message = message;\n\t    }\n\t    function setTagRef(commit, tag) {\n\t        if (!commitsElements[commit.hashAbbrev]) {\n\t            initCommitElements(commit);\n\t        }\n\t        commitsElements[commit.hashAbbrev].tags.push(tag);\n\t    }\n\t    function initCommitElements(commit) {\n\t        commitsElements[commit.hashAbbrev] = {\n\t            branchLabel: null,\n\t            tags: [],\n\t            message: null,\n\t        };\n\t    }\n\t}\n\tfunction getMessageHeight(message) {\n\t    var messageHeight = 0;\n\t    if (message) {\n\t        var height = message.getBoundingClientRect().height;\n\t        var marginTopInPx = window.getComputedStyle(message).marginTop || \"0px\";\n\t        var marginTop = parseInt(marginTopInPx.replace(\"px\", \"\"), 10);\n\t        messageHeight = height + marginTop;\n\t    }\n\t    return messageHeight;\n\t}\n\n\texports.MergeStyle = lib_9;\n\texports.Mode = lib_2;\n\texports.Orientation = lib_12;\n\texports.TemplateName = lib_10;\n\texports.createGitgraph = createGitgraph;\n\texports.templateExtend = lib_11;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// Extracted from `gitgraph.ts` because it caused `utils` tests to fail\n// because of circular dependency between `utils` and `template`.\n// It's not clear why (the circular dependency still exist) but `Orientation`\n// was the only one causing issue. Maybe because it's an enum?\n\nexport enum Orientation {\n  VerticalReverse = \"vertical-reverse\",\n  Horizontal = \"horizontal\",\n  HorizontalReverse = \"horizontal-reverse\",\n}\n","import { Commit } from \"./commit\";\nimport { GitgraphCore } from \"./gitgraph\";\nimport { Orientation } from \"./orientation\";\nimport { Coordinate } from \"./branches-paths\";\n\nexport {\n  Omit,\n  NonMatchingPropNames,\n  NonMatchingProp,\n  booleanOptionOr,\n  numberOptionOr,\n  pick,\n  debug,\n  isUndefined,\n  withoutUndefinedKeys,\n  arrowSvgPath,\n};\n\n/**\n * Omit some keys from an original type.\n */\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Get all property names not matching a type.\n *\n * @ref http://tycho01.github.io/typical/modules/_object_nonmatchingpropsnames_.html\n */\ntype NonMatchingPropNames<T, X> = {\n  [K in keyof T]: T[K] extends X ? never : K\n}[keyof T];\n\n/**\n * Get all properties with names not matching a type.\n *\n * @ref http://tycho01.github.io/typical/modules/_object_nonmatchingprops_.html\n */\ntype NonMatchingProp<T, X> = Pick<T, NonMatchingPropNames<T, X>>;\n\n/**\n * Provide a default value to a boolean.\n * @param value\n * @param defaultValue\n */\nfunction booleanOptionOr(value: any, defaultValue: boolean): boolean {\n  return typeof value === \"boolean\" ? value : defaultValue;\n}\n\n/**\n * Provide a default value to a number.\n * @param value\n * @param defaultValue\n */\nfunction numberOptionOr(value: any, defaultValue: number): number {\n  return typeof value === \"number\" ? value : defaultValue;\n}\n\n/**\n * Creates an object composed of the picked object properties.\n * @param obj The source object\n * @param paths The property paths to pick\n */\nfunction pick<T, K extends keyof T>(obj: T, paths: K[]): Pick<T, K> {\n  return {\n    ...paths.reduce((mem, key) => ({ ...mem, [key]: obj[key] }), {}),\n  } as Pick<T, K>;\n}\n\n/**\n * Print a light version of commits into the console.\n * @param commits List of commits\n * @param paths The property paths to pick\n */\nfunction debug<TNode = SVGElement>(\n  commits: Array<Commit<TNode>>,\n  paths: Array<keyof Commit<TNode>>,\n): void {\n  // tslint:disable-next-line:no-console\n  console.log(\n    JSON.stringify(commits.map((commit) => pick(commit, paths)), null, 2),\n  );\n}\n\n/**\n * Return true if is undefined.\n *\n * @param obj\n */\nfunction isUndefined(obj: any): obj is undefined {\n  return obj === undefined;\n}\n\n/**\n * Return a version of the object without any undefined keys.\n *\n * @param obj\n */\nfunction withoutUndefinedKeys<T extends object>(\n  obj: T = {} as T,\n): NonMatchingProp<T, undefined> {\n  return (Object.keys(obj) as [keyof T]).reduce<T>(\n    (mem: any, key) =>\n      isUndefined(obj[key]) ? mem : { ...mem, [key]: obj[key] },\n    {} as T,\n  );\n}\n\n/**\n * Return a string ready to use in `svg.path.d` to draw an arrow from params.\n *\n * @param graph Graph context\n * @param parent Parent commit of the target commit\n * @param commit Target commit\n */\nfunction arrowSvgPath<TNode = SVGElement>(\n  graph: GitgraphCore<TNode>,\n  parent: Coordinate,\n  commit: Commit<TNode>,\n): string {\n  const commitRadius = commit.style.dot.size;\n  const size = graph.template.arrow.size!;\n  const h = commitRadius + graph.template.arrow.offset;\n\n  // Delta between left & right (radian)\n  const delta = Math.PI / 7;\n\n  // Alpha angle between parent & commit (radian)\n  const alpha = getAlpha(graph, parent, commit);\n\n  // Top\n  const x1 = h * Math.cos(alpha);\n  const y1 = h * Math.sin(alpha);\n\n  // Bottom right\n  const x2 = (h + size) * Math.cos(alpha - delta);\n  const y2 = (h + size) * Math.sin(alpha - delta);\n\n  // Bottom center\n  const x3 = (h + size / 2) * Math.cos(alpha);\n  const y3 = (h + size / 2) * Math.sin(alpha);\n\n  // Bottom left\n  const x4 = (h + size) * Math.cos(alpha + delta);\n  const y4 = (h + size) * Math.sin(alpha + delta);\n\n  return `M${x1},${y1} L${x2},${y2} Q${x3},${y3} ${x4},${y4} L${x4},${y4}`;\n}\n\nfunction getAlpha<TNode = SVGElement>(\n  graph: GitgraphCore<TNode>,\n  parent: Coordinate,\n  commit: Commit<TNode>,\n): number {\n  const deltaX = parent.x - commit.x;\n  const deltaY = parent.y - commit.y;\n  const commitSpacing = graph.template.commit.spacing;\n\n  let alphaY;\n  let alphaX;\n\n  // Angle usually start from previous commit Y position:\n  //\n  // o\n  // ↑ ↖ ︎\n  // o  |  <-- path is straight until last commit Y position\n  // ↑  o\n  // | ↗︎\n  // o\n  //\n  // So we can to default to commit spacing.\n  // For horizontal orientation => same with commit X position.\n  switch (graph.orientation) {\n    case Orientation.Horizontal:\n      alphaY = deltaY;\n      alphaX = -commitSpacing;\n      break;\n\n    case Orientation.HorizontalReverse:\n      alphaY = deltaY;\n      alphaX = commitSpacing;\n      break;\n\n    case Orientation.VerticalReverse:\n      alphaY = -commitSpacing;\n      alphaX = deltaX;\n      break;\n\n    default:\n      alphaY = commitSpacing;\n      alphaX = deltaX;\n      break;\n  }\n\n  // If commit is distant from its parent, there should be no angle.\n  //\n  //    o ︎\n  //    ↑  <-- arrow is like previous commit was on same X position\n  // o  |\n  // | /\n  // o\n  //\n  // For horizontal orientation => same with commit Y position.\n  if (graph.isVertical) {\n    if (Math.abs(deltaY) > commitSpacing) alphaX = 0;\n  } else {\n    if (Math.abs(deltaX) > commitSpacing) alphaY = 0;\n  }\n\n  if (graph.reverseArrow) {\n    alphaY *= -1;\n    alphaX *= -1;\n  }\n\n  return Math.atan2(alphaY, alphaX);\n}\n","import { booleanOptionOr, numberOptionOr } from \"./utils\";\n\nexport {\n  MergeStyle,\n  ArrowStyle,\n  BranchStyle,\n  CommitDotStyle,\n  CommitMessageStyle,\n  CommitStyleBase,\n  CommitStyle,\n  TemplateOptions,\n  Template,\n  TemplateName,\n  blackArrowTemplate,\n  metroTemplate,\n  templateExtend,\n  getTemplate,\n};\n\n/**\n * Branch merge style enum\n */\nenum MergeStyle {\n  Bezier = \"bezier\",\n  Straight = \"straight\",\n}\n\n/**\n * Arrow style\n */\ninterface ArrowStyle {\n  /**\n   * Arrow color\n   */\n  color: string | null;\n  /**\n   * Arrow size in pixel\n   */\n  size: number | null;\n  /**\n   * Arrow offset in pixel\n   */\n  offset: number;\n}\n\ntype ArrowStyleOptions = Partial<ArrowStyle>;\n\ninterface BranchStyle {\n  /**\n   * Branch color\n   */\n  color?: string;\n  /**\n   * Branch line width in pixel\n   */\n  lineWidth: number;\n  /**\n   * Branch merge style\n   */\n  mergeStyle: MergeStyle;\n  /**\n   * Space between branches\n   */\n  spacing: number;\n  /**\n   * Branch label style\n   */\n  label: BranchLabelStyleOptions;\n}\n\ntype BranchStyleOptions = Partial<BranchStyle>;\n\ninterface BranchLabelStyle {\n  /**\n   * Branch label visibility\n   */\n  display: boolean;\n  /**\n   * Branch label text color\n   */\n  color: string;\n  /**\n   * Branch label stroke color\n   */\n  strokeColor: string;\n  /**\n   * Branch label background color\n   */\n  bgColor: string;\n  /**\n   * Branch label font\n   */\n  font: string;\n  /**\n   * Branch label border radius\n   */\n  borderRadius: number;\n}\n\ntype BranchLabelStyleOptions = Partial<BranchLabelStyle>;\n\nexport interface TagStyle {\n  /**\n   * Tag text color\n   */\n  color: string;\n  /**\n   * Tag stroke color\n   */\n  strokeColor?: string;\n  /**\n   * Tag background color\n   */\n  bgColor?: string;\n  /**\n   * Tag font\n   */\n  font: string;\n  /**\n   * Tag border radius\n   */\n  borderRadius: number;\n  /**\n   * Width of the tag pointer\n   */\n  pointerWidth: number;\n}\n\ntype TagStyleOptions = Partial<TagStyle>;\n\ninterface CommitDotStyle {\n  /**\n   * Commit dot color\n   */\n  color?: string;\n  /**\n   * Commit dot size in pixel\n   */\n  size: number;\n  /**\n   * Commit dot stroke width\n   */\n  strokeWidth?: number;\n  /**\n   * Commit dot stroke color\n   */\n  strokeColor?: string;\n  /**\n   * Commit dot font\n   */\n  font: string;\n}\n\ntype CommitDotStyleOptions = Partial<CommitDotStyle>;\n\ninterface CommitMessageStyle {\n  /**\n   * Commit message color\n   */\n  color?: string;\n  /**\n   * Commit message display policy\n   */\n  display: boolean;\n  /**\n   * Commit message author display policy\n   */\n  displayAuthor: boolean;\n  /**\n   * Commit message hash display policy\n   */\n  displayHash: boolean;\n  /**\n   * Commit message font\n   */\n  font: string;\n}\n\ntype CommitMessageStyleOptions = Partial<CommitMessageStyle>;\n\ninterface CommitStyleBase {\n  /**\n   * Spacing between commits\n   */\n  spacing: number;\n  /**\n   * Commit color (dot & message)\n   */\n  color?: string;\n  /**\n   * Tooltips policy\n   */\n  hasTooltipInCompactMode: boolean;\n}\n\ninterface CommitStyle extends CommitStyleBase {\n  /**\n   * Commit message style\n   */\n  message: CommitMessageStyle;\n  /**\n   * Commit dot style\n   */\n  dot: CommitDotStyle;\n}\n\ninterface CommitStyleOptions extends Partial<CommitStyleBase> {\n  /**\n   * Commit message style\n   */\n  message?: CommitMessageStyleOptions;\n  /**\n   * Commit dot style\n   */\n  dot?: CommitDotStyleOptions;\n}\n\ninterface TemplateOptions {\n  /**\n   * Colors scheme: One color for each column\n   */\n  colors?: string[];\n  /**\n   * Arrow style\n   */\n  arrow?: ArrowStyleOptions;\n  /**\n   * Branch style\n   */\n  branch?: BranchStyleOptions;\n  /**\n   * Commit style\n   */\n  commit?: CommitStyleOptions;\n  /**\n   * Tag style\n   */\n  tag?: TagStyleOptions;\n}\n\nexport const DEFAULT_FONT = \"normal 12pt Calibri\";\n\n/**\n * Gitgraph template\n *\n * Set of design rules for the rendering.\n */\nclass Template {\n  /**\n   * Colors scheme: One color for each column\n   */\n  public colors: string[];\n  /**\n   * Arrow style\n   */\n  public arrow: ArrowStyle;\n  /**\n   * Branch style\n   */\n  public branch: BranchStyle;\n  /**\n   * Commit style\n   */\n  public commit: CommitStyle;\n  /**\n   * Tag style\n   */\n  public tag: TagStyleOptions;\n\n  constructor(options: TemplateOptions) {\n    // Options\n    options.branch = options.branch || {};\n    options.branch.label = options.branch.label || {};\n    options.arrow = options.arrow || {};\n    options.commit = options.commit || {};\n    options.commit.dot = options.commit.dot || {};\n    options.commit.message = options.commit.message || {};\n\n    // One color per column\n    this.colors = options.colors || [\"#000000\"];\n\n    // Branch style\n    this.branch = {\n      color: options.branch.color,\n      lineWidth: options.branch.lineWidth || 2,\n      mergeStyle: options.branch.mergeStyle || MergeStyle.Bezier,\n      spacing: numberOptionOr(options.branch.spacing, 20),\n      label: {\n        display: booleanOptionOr(options.branch.label.display, true),\n        color: options.branch.label.color || options.commit.color,\n        strokeColor: options.branch.label.strokeColor || options.commit.color,\n        bgColor: options.branch.label.bgColor || \"white\",\n        font:\n          options.branch.label.font ||\n          options.commit.message.font ||\n          DEFAULT_FONT,\n        borderRadius: numberOptionOr(options.branch.label.borderRadius, 10),\n      },\n    };\n\n    // Arrow style\n    this.arrow = {\n      size: options.arrow.size || null,\n      color: options.arrow.color || null,\n      offset: options.arrow.offset || 2,\n    };\n\n    // Commit style\n    this.commit = {\n      color: options.commit.color,\n      spacing: numberOptionOr(options.commit.spacing, 25),\n      hasTooltipInCompactMode: booleanOptionOr(\n        options.commit.hasTooltipInCompactMode,\n        true,\n      ),\n      dot: {\n        color: options.commit.dot.color || options.commit.color,\n        size: options.commit.dot.size || 3,\n        strokeWidth: numberOptionOr(options.commit.dot.strokeWidth, 0),\n        strokeColor: options.commit.dot.strokeColor,\n        font:\n          options.commit.dot.font ||\n          options.commit.message.font ||\n          \"normal 10pt Calibri\",\n      },\n      message: {\n        display: booleanOptionOr(options.commit.message.display, true),\n        displayAuthor: booleanOptionOr(\n          options.commit.message.displayAuthor,\n          true,\n        ),\n        displayHash: booleanOptionOr(options.commit.message.displayHash, true),\n        color: options.commit.message.color || options.commit.color,\n        font: options.commit.message.font || DEFAULT_FONT,\n      },\n    };\n\n    // Tag style\n    // This one is computed in the Tag instance. It needs Commit style\n    // that is partially computed at runtime (for colors).\n    this.tag = options.tag || {};\n  }\n}\n\n/**\n * Black arrow template\n */\nconst blackArrowTemplate = new Template({\n  colors: [\"#6963FF\", \"#47E8D4\", \"#6BDB52\", \"#E84BA5\", \"#FFA657\"],\n  branch: {\n    color: \"#000000\",\n    lineWidth: 4,\n    spacing: 50,\n    mergeStyle: MergeStyle.Straight,\n  },\n  commit: {\n    spacing: 60,\n    dot: {\n      size: 16,\n      strokeColor: \"#000000\",\n      strokeWidth: 4,\n    },\n    message: {\n      color: \"black\",\n    },\n  },\n  arrow: {\n    size: 16,\n    offset: -1.5,\n  },\n});\n\n/**\n * Metro template\n */\nconst metroTemplate = new Template({\n  colors: [\"#979797\", \"#008fb5\", \"#f1c109\"],\n  branch: {\n    lineWidth: 10,\n    spacing: 50,\n  },\n  commit: {\n    spacing: 80,\n    dot: {\n      size: 14,\n    },\n    message: {\n      font: \"normal 14pt Arial\",\n    },\n  },\n});\n\nenum TemplateName {\n  Metro = \"metro\",\n  BlackArrow = \"blackarrow\",\n}\n\n/**\n * Extend an existing template with new options.\n *\n * @param selectedTemplate Template to extend\n * @param options Template options\n */\nfunction templateExtend(\n  selectedTemplate: TemplateName,\n  options: TemplateOptions,\n): Template {\n  const template = getTemplate(selectedTemplate);\n\n  if (!options.branch) options.branch = {};\n  if (!options.commit) options.commit = {};\n\n  // This is tedious, but it seems acceptable so we don't need lodash\n  // as we want to keep bundlesize small.\n  return {\n    colors: options.colors || template.colors,\n    arrow: {\n      ...template.arrow,\n      ...options.arrow,\n    },\n    branch: {\n      ...template.branch,\n      ...options.branch,\n      label: {\n        ...template.branch.label,\n        ...options.branch.label,\n      },\n    },\n    commit: {\n      ...template.commit,\n      ...options.commit,\n      dot: {\n        ...template.commit.dot,\n        ...options.commit.dot,\n      },\n      message: {\n        ...template.commit.message,\n        ...options.commit.message,\n      },\n    },\n    tag: {\n      ...template.tag,\n      ...options.tag,\n    },\n  };\n}\n\n/**\n * Resolve the template to use regarding given `template` value.\n *\n * @param template Selected template name, or instance.\n */\nfunction getTemplate(template?: TemplateName | Template): Template {\n  if (!template) return metroTemplate;\n\n  if (typeof template === \"string\") {\n    return {\n      [TemplateName.BlackArrow]: blackArrowTemplate,\n      [TemplateName.Metro]: metroTemplate,\n    }[template];\n  }\n\n  return template as Template;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","import { createGitgraph, templateExtend } from \"@gitgraph/js\";\nimport { metroTemplate } from \"@gitgraph/core/lib/template\";\n\nvar Color = require('color');\n\nconst c = {\n  master: new Color('#607d8b'),   // blueGrey\n  develop: new Color('#2196f3'),  // blue\n  feature: new Color('#4caf50'),  // green\n  release: new Color('#ffc107'),  // amber\n  qa: new Color('#9e9e9e'),       //grey\n  bugfix: new Color('#e91e63'),   // pink\n  hotfix: new Color('#9c27b0'),   // purple\n};\n\n// Get the graph container HTML element.\nconst graphContainer = document.getElementById(\"graph-container\");\n\nconst customTemplate = templateExtend('metro', {\n  commit: {\n    message: {\n      displayAuthor: false,\n      displayHash: false,\n    },\n  },\n  colors: [\n    c.master.hex(),\n    c.develop.hex(),\n    c.feature.hex(),\n    c.release.hex(),\n    c.qa.hex(),\n    c.bugfix.hex(),\n    c.hotfix.hex()\n  ]\n});\n\n// Instantiate the graph.\nconst gg = createGitgraph(graphContainer, {\n  template: customTemplate,\n  orientation: 'vertical',\n  // mode: compact,\n  // reverseArrow: false,\n  // initCommitOffsetX?: number;\n  // initCommitOffsetY?: number;\n  author: 'J Smith',\n  // branchLabelOnEveryCommit: true,\n});\n\n\n/***************************************************************************\n * MASTER AND DEVELOP BRANCHES\n ***************************************************************************\n * - Init repository with two historical, long-lived branches:\n *    - master\n *    - develop\n * - Create a release v1.0.0 for reference\n **************************************************************************/\nconst master =  gg.branch('master')\n                  .commit('First commit on master');\nconst develop = gg.branch({name: 'develop', from: master})\n                  .commit('First commit on develop')\n\n\n/***************************************************************************\n * FEATURE BRANCHES\n ***************************************************************************\n * - Create two feature branches, each with one commit:\n *    - feature/feature-a\n *    - feature/feature-b\n * - Merge feature/feature-a into develop\n * - Merge feature/feature-b into develop\n **************************************************************************/\nconst featureA = gg.branch({ name: 'feature/feature-a', from: develop })\n                   .commit('Feature A commit one');\n\ndevelop.merge(featureA);\n\n/***************************************************************************\n * RELEASE CYCLE: RELEASE AND QA BRANCHES\n ***************************************************************************\n *  - Start a release cycle by creating a release branch from develop:\n *      - release/1.0.0 (with a commit for bumping version numbers)\n *  - Create a QA branch from the release branch\n *      - qa\n **************************************************************************/\nconst release = gg.branch({ name: 'release/1.0.0', from: develop })\n                  .commit('Start release: Bump version numbers');\nconst qa = gg.branch({ name: 'qa', from: release })\n             .commit('Start qa: reference only');\n\n/***************************************************************************\n * RELEASE CYCLE: BUGFIX BRANCHES\n ***************************************************************************\n *  - Create a bugfix branch off release:\n *    - bugfix/bugfix-a\n *  - Merge bugfix/bugfix-a into release\n *  - Create another bugfix branch off release\n *    - bugfix/bugfix-b\n *  - Merge release branch into qa for testing,\n *  - Merge last bugfix into release\n *  - Merge release into qa to reveiew bugfixes\n **************************************************************************/\nconst bugfixA = gg.branch({ name: 'bugfix/bugfix-a', from: release })\n                  .commit('Bugfix A first commit');\n\nrelease.merge(bugfixA);\nqa.merge(release);\n\n\n/***************************************************************************\n * RELEASE CYCLE: FINISH QA AND RELEASE BRANCHES\n ***************************************************************************\n * - Merge release branch into master with tagged commit\n * - Merge release branch into develop to get bugfixes into develop\n **************************************************************************/\nrelease.commit('Finished with release');\ndevelop.merge(release);\nconst v2_tagged = master.merge(release).tag(\"1.0.0\");\n\n\n/***************************************************************************\n * HOTFIX BRANCHES\n ***************************************************************************\n * - Create hotfix branch on master\n * - Merge hotfix branch into master and develop\n **************************************************************************/\nconst hotfixA = gg.branch({ name: 'hotfix/hotfix-a', from: v2_tagged })\n  .commit('Hotfix first commit');\nmaster.merge(hotfixA).tag(\"1.0.1\");\ndevelop.merge(hotfixA);\n\n// Examples:\n  // Branch\n  /**\n    const master = gg.branch({\n      name: 'master',\n      style: {\n\n      }\n    });\n\n  */\n  // Commit\n  /**\n    master.commit({\n      subject: 'Initial commit',\n      body: \"This is the inital commit on master\",\n      dotText: \"❤️\",\n      tag: \"v1.2\",\n      style: {\n\n      }\n    });\n  */\n  // Merge\n  /**\n    master.merge({\n      branch: develop,\n      fastForward: true,\n      commitOptions: {\n        // Every valid `options` for a commit\n      },\n    });\n  */\n\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}